// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contractMinimalCertificateVerifier

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BN254G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G1Point struct {
	X *big.Int
	Y *big.Int
}

// BN254G2Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// IBLSSignatureCheckerNonSignerStakesAndSignature is an auto generated low-level Go binding around an user-defined struct.
type IBLSSignatureCheckerNonSignerStakesAndSignature struct {
	NonSignerQuorumBitmapIndices []uint32
	NonSignerPubkeys             []BN254G1Point
	QuorumApks                   []BN254G1Point
	ApkG2                        BN254G2Point
	Sigma                        BN254G1Point
	QuorumApkIndices             []uint32
	TotalStakeIndices            []uint32
	NonSignerStakeIndices        [][]uint32
}

// IBLSSignatureCheckerQuorumStakeTotals is an auto generated low-level Go binding around an user-defined struct.
type IBLSSignatureCheckerQuorumStakeTotals struct {
	SignedStakeForQuorum []*big.Int
	TotalStakeForQuorum  []*big.Int
}

// ContractMinimalCertificateVerifierMetaData contains all meta data concerning the ContractMinimalCertificateVerifier contract.
var ContractMinimalCertificateVerifierMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"__registryCoordinator\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"DENOMINATOR\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"THRESHOLD\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"blsApkRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIBLSApkRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"checkSignatures\",\"inputs\":[{\"name\":\"msgHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"quorumNumbers\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"referenceBlockNumber\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"params\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.NonSignerStakesAndSignature\",\"components\":[{\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApks\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\",\"internalType\":\"uint32[][]\"}]}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.QuorumStakeTotals\",\"components\":[{\"name\":\"signedStakeForQuorum\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"},{\"name\":\"totalStakeForQuorum\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"}]},{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"delegation\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIDelegationManager\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"registryCoordinator\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"setStaleStakesForbidden\",\"inputs\":[{\"name\":\"value\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"stakeRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIStakeRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"staleStakesForbidden\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"trySignatureAndApkVerification\",\"inputs\":[{\"name\":\"msgHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"apk\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}],\"outputs\":[{\"name\":\"pairingSuccessful\",\"type\":\"bool\",\"internalType\":\"bool\"},{\"name\":\"siganatureIsValid\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"verificationRecords\",\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"quorumNumbers\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"referenceBlockNumber\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"signatoryRecordHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"quorumStakeTotals\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.QuorumStakeTotals\",\"components\":[{\"name\":\"signedStakeForQuorum\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"},{\"name\":\"totalStakeForQuorum\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"}]}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"verifyCertificate\",\"inputs\":[{\"name\":\"response\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"quorumNumbers\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"referenceBlockNumber\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"params\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.NonSignerStakesAndSignature\",\"components\":[{\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApks\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\",\"internalType\":\"uint32[][]\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"StaleStakesForbiddenUpdate\",\"inputs\":[{\"name\":\"value\",\"type\":\"bool\",\"indexed\":false,\"internalType\":\"bool\"}],\"anonymous\":false}]",
	Bin: "0x610100604052348015610010575f5ffd5b5060405161305b38038061305b83398101604081905261002f916101c9565b80806001600160a01b03166080816001600160a01b031681525050806001600160a01b031663683048356040518163ffffffff1660e01b8152600401602060405180830381865afa158015610086573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100aa91906101c9565b6001600160a01b031660a0816001600160a01b031681525050806001600160a01b0316635df459466040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ff573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061012391906101c9565b6001600160a01b031660c0816001600160a01b03168152505060a0516001600160a01b031663df5cf7236040518163ffffffff1660e01b8152600401602060405180830381865afa15801561017a573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061019e91906101c9565b6001600160a01b031660e052506101eb9050565b6001600160a01b03811681146101c6575f5ffd5b50565b5f602082840312156101d9575f5ffd5b81516101e4816101b2565b9392505050565b60805160a05160c05160e051612e066102555f395f81816102230152610bd001525f818160fe0152610dac01525f818161013d01528181610f7f015261113401525f8181610164015281816103c9015281816108b101528181610a420152610c6a0152612e065ff3fe608060405234801561000f575f5ffd5b50600436106100b1575f3560e01c8063785ffb371161006e578063785ffb37146101a757806381d18a0d146101bd57806381d9d23d146101d0578063918f8674146101f3578063b98d090814610202578063df5cf7231461021e575f5ffd5b8063171f1d5b146100b5578063416c7e5e146100e45780635df45946146100f957806368304835146101385780636d14a9871461015f5780636efb463614610186575b5f5ffd5b6100c86100c336600461248b565b610245565b6040805192151583529015156020830152015b60405180910390f35b6100f76100f23660046124d9565b6103c7565b005b6101207f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100db565b6101207f000000000000000000000000000000000000000000000000000000000000000081565b6101207f000000000000000000000000000000000000000000000000000000000000000081565b610199610194366004612803565b610504565b6040516100db9291906128fe565b6101af6113ce565b6040519081526020016100db565b6100f76101cb36600461291f565b6113e4565b6101e36101de3660046129cc565b61163b565b6040516100db94939291906129e3565b6101af670de0b6b3a764000081565b5f5461020e9060ff1681565b60405190151581526020016100db565b6101207f000000000000000000000000000000000000000000000000000000000000000081565b5f5f5f7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000187875f01518860200151885f01515f6002811061028857610288612a43565b60200201518951600160200201518a602001515f600281106102ac576102ac612a43565b60200201518b602001516001600281106102c8576102c8612a43565b602090810291909101518c518d8301516040516103259a99989796959401988952602089019790975260408801959095526060870193909352608086019190915260a085015260c084015260e08301526101008201526101200190565b604051602081830303815290604052805190602001205f1c6103479190612a6b565b90506103b961036061035988846117ff565b869061188e565b610368611921565b6103af6103a08561039a6040805180820182525f80825260209182015281518083019092526001825260029082015290565b906117ff565b6103a98c6119e1565b9061188e565b886201d4c0611a6b565b909890975095505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610423573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104479190612a7e565b6001600160a01b0316336001600160a01b0316146104f85760405162461bcd60e51b815260206004820152605c60248201527f424c535369676e6174757265436865636b65722e6f6e6c79436f6f7264696e6160448201527f746f724f776e65723a2063616c6c6572206973206e6f7420746865206f776e6560648201527f72206f6620746865207265676973747279436f6f7264696e61746f7200000000608482015260a4015b60405180910390fd5b61050181611c7f565b50565b60408051808201909152606080825260208201525f84810361057b5760405162461bcd60e51b815260206004820152603760248201525f516020612db15f395f51905f5260448201527f7265733a20656d7074792071756f72756d20696e70757400000000000000000060648201526084016104ef565b60408301515185148015610593575060a08301515185145b80156105a3575060c08301515185145b80156105b3575060e08301515185145b61061c5760405162461bcd60e51b815260206004820152604160248201525f516020612db15f395f51905f5260448201527f7265733a20696e7075742071756f72756d206c656e677468206d69736d6174636064820152600d60fb1b608482015260a4016104ef565b825151602084015151146106935760405162461bcd60e51b8152602060048201526044602482018190525f516020612db15f395f51905f52908201527f7265733a20696e707574206e6f6e7369676e6572206c656e677468206d69736d6064820152630c2e8c6d60e31b608482015260a4016104ef565b4363ffffffff168463ffffffff16106107015760405162461bcd60e51b815260206004820152603c60248201525f516020612db15f395f51905f5260448201527f7265733a20696e76616c6964207265666572656e636520626c6f636b0000000060648201526084016104ef565b6040805180820182525f808252602080830191909152825180840190935260608084529083015290866001600160401b0381111561074157610741612342565b60405190808252806020026020018201604052801561076a578160200160208202803683370190505b506020820152866001600160401b0381111561078857610788612342565b6040519080825280602002602001820160405280156107b1578160200160208202803683370190505b50815260408051808201909152606080825260208201528560200151516001600160401b038111156107e5576107e5612342565b60405190808252806020026020018201604052801561080e578160200160208202803683370190505b5081526020860151516001600160401b0381111561082e5761082e612342565b604051908082528060200260200182016040528015610857578160200160208202803683370190505b5081602001819052505f6109258a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152505060408051639aa1653d60e01b815290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169350639aa1653d925060048083019260209291908290030181865afa1580156108fc573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109209190612aa4565b611cc5565b90505f5b876020015151811015610bac5761096d8860200151828151811061094f5761094f612a43565b602002602001015180515f9081526020918201519091526040902090565b8360200151828151811061098357610983612a43565b60209081029190910101528015610a405760208301516109a4600183612ad8565b815181106109b4576109b4612a43565b60200260200101515f1c836020015182815181106109d4576109d4612a43565b60200260200101515f1c11610a40576040805162461bcd60e51b81526020600482015260248101919091525f516020612db15f395f51905f5260448201527f7265733a206e6f6e5369676e65725075626b657973206e6f7420736f7274656460648201526084016104ef565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166304ec635184602001518381518110610a8557610a85612a43565b60200260200101518b8b5f01518581518110610aa357610aa3612a43565b60200260200101516040518463ffffffff1660e01b8152600401610ae09392919092835263ffffffff918216602084015216604082015260600190565b602060405180830381865afa158015610afb573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b1f9190612aeb565b6001600160c01b0316835f01518281518110610b3d57610b3d612a43565b602002602001018181525050610ba2610359610b7684865f01518581518110610b6857610b68612a43565b602002602001015116611d57565b8a602001518481518110610b8c57610b8c612a43565b6020026020010151611d8190919063ffffffff16565b9450600101610929565b5050610bb783611e62565b5f805491945060ff9091169081610bce575f610c4e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c448feb86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c2a573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c4e9190612b11565b90505f5b8a8110156112a1578215610daa578963ffffffff16827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663249a0c428f8f86818110610ca957610ca9612a43565b60405160e085901b6001600160e01b031916815292013560f81c600483015250602401602060405180830381865afa158015610ce7573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d0b9190612b11565b610d159190612b28565b11610daa5760405162461bcd60e51b815260206004820152606660248201525f516020612db15f395f51905f5260448201527f7265733a205374616b6552656769737472792075706461746573206d7573742060648201527f62652077697468696e207769746864726177616c44656c6179426c6f636b732060848201526577696e646f7760d01b60a482015260c4016104ef565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368bccaac8d8d84818110610deb57610deb612a43565b9050013560f81c60f81b60f81c8c8c60a001518581518110610e0f57610e0f612a43565b60209081029190910101516040516001600160e01b031960e086901b16815260ff909316600484015263ffffffff9182166024840152166044820152606401602060405180830381865afa158015610e69573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e8d9190612b3b565b6001600160401b031916610eb08a60400151838151811061094f5761094f612a43565b67ffffffffffffffff191614610f4b5760405162461bcd60e51b815260206004820152606160248201525f516020612db15f395f51905f5260448201527f7265733a2071756f72756d41706b206861736820696e2073746f72616765206460648201527f6f6573206e6f74206d617463682070726f76696465642071756f72756d2061706084820152606b60f81b60a482015260c4016104ef565b610f7b89604001518281518110610f6457610f64612a43565b60200260200101518761188e90919063ffffffff16565b95507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c8294c568d8d84818110610fbe57610fbe612a43565b9050013560f81c60f81b60f81c8c8c60c001518581518110610fe257610fe2612a43565b60209081029190910101516040516001600160e01b031960e086901b16815260ff909316600484015263ffffffff9182166024840152166044820152606401602060405180830381865afa15801561103c573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110609190612b63565b8560200151828151811061107657611076612a43565b6001600160601b039092166020928302919091018201528501518051829081106110a2576110a2612a43565b6020026020010151855f015182815181106110bf576110bf612a43565b6001600160601b03909216602092830291909101909101525f805b8a60200151518110156112975761112d865f015182815181106110ff576110ff612a43565b60200260200101518f8f8681811061111957611119612a43565b600192013560f81c9290921c811614919050565b1561128f577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f2be94ae8f8f8681811061117357611173612a43565b9050013560f81c60f81b60f81c8e8960200151858151811061119757611197612a43565b60200260200101518f60e0015188815181106111b5576111b5612a43565b602002602001015187815181106111ce576111ce612a43565b60209081029190910101516040516001600160e01b031960e087901b16815260ff909416600485015263ffffffff92831660248501526044840191909152166064820152608401602060405180830381865afa158015611230573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112549190612b63565b875180518590811061126857611268612a43565b6020026020010181815161127c9190612b89565b6001600160601b03169052506001909101905b6001016110da565b5050600101610c52565b5050505f5f6112ba8c868a606001518b60800151610245565b915091508161132a5760405162461bcd60e51b815260206004820152604360248201525f516020612db15f395f51905f5260448201527f7265733a2070616972696e6720707265636f6d70696c652063616c6c206661696064820152621b195960ea1b608482015260a4016104ef565b8061138a5760405162461bcd60e51b815260206004820152603960248201525f516020612db15f395f51905f5260448201527f7265733a207369676e617475726520697320696e76616c69640000000000000060648201526084016104ef565b50505f8782602001516040516020016113a4929190612ba8565b60408051808303601f190181529190528051602090910120929b929a509198505050505050505050565b6113e16002670de0b6b3a7640000612bee565b81565b5f86866040516113f5929190612c01565b60408051918290039091205f8181526032602052919091206001015490915063ffffffff16156114675760405162461bcd60e51b815260206004820152601c60248201527f436572746966696361746520616c72656164792076657269666965640000000060448201526064016104ef565b5f806114798388888861019489612c10565b90925090505f5b8251518110156115505761149d6002670de0b6b3a7640000612bee565b836020015182815181106114b3576114b3612a43565b60200260200101516001600160601b03166114ce9190612c1b565b670de0b6b3a7640000845f015183815181106114ec576114ec612a43565b60200260200101516001600160601b03166115079190612c1b565b116115485760405162461bcd60e51b8152602060048201526011602482015270151a1c995cda1bdb19081b9bdd081b595d607a1b60448201526064016104ef565b600101611480565b50604051806080016040528088888080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92018290525093855250505063ffffffff8816602080840191909152604080840186905260609093018690528682526032905220815181906115c99082612cb6565b5060208281015160018301805463ffffffff191663ffffffff9092169190911790556040830151600283015560608301518051805191926003850192611612928492019061219f565b50602082810151805161162b926001850192019061219f565b5050505050505050505050505050565b60326020525f908152604090208054819061165590612c32565b80601f016020809104026020016040519081016040528092919081815260200182805461168190612c32565b80156116cc5780601f106116a3576101008083540402835291602001916116cc565b820191905f5260205f20905b8154815290600101906020018083116116af57829003601f168201915b505050506001830154600284015460408051600387018054606060208202840181018552938301818152979863ffffffff90961697949650919390928492849184018282801561176a57602002820191905f5260205f20905f905b82829054906101000a90046001600160601b03166001600160601b0316815260200190600c0190602082600b010492830192600103820291508084116117275790505b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156117f157602002820191905f5260205f20905f905b82829054906101000a90046001600160601b03166001600160601b0316815260200190600c0190602082600b010492830192600103820291508084116117ae5790505b505050505081525050905084565b604080518082019091525f808252602082015261181a612254565b835181526020808501519082015260408082018490525f908360608460076107d05a03fa9050808061184857fe5b50806118865760405162461bcd60e51b815260206004820152600d60248201526c1958cb5b5d5b0b59985a5b1959609a1b60448201526064016104ef565b505092915050565b604080518082019091525f80825260208201526118a9612272565b835181526020808501518183015283516040808401919091529084015160608301525f908360808460066107d05a03fa905080806118e357fe5b50806118865760405162461bcd60e51b815260206004820152600d60248201526c1958cb5859190b59985a5b1959609a1b60448201526064016104ef565b611929612290565b50604080516080810182527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28183019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060830152815281518083019092527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec82527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d60208381019190915281019190915290565b604080518082019091525f80825260208201525f8080611a0e5f516020612d915f395f51905f5286612a6b565b90505b611a1a81611ef8565b90935091505f516020612d915f395f51905f528283098303611a52576040805180820190915290815260208101919091529392505050565b5f516020612d915f395f51905f52600182089050611a11565b6040805180820182528681526020808201869052825180840190935286835282018490525f91829190611a9c6122b5565b5f5b6002811015611c53575f611ab3826006612c1b565b9050848260028110611ac757611ac7612a43565b60200201515183611ad8835f612b28565b600c8110611ae857611ae8612a43565b6020020152848260028110611aff57611aff612a43565b60200201516020015183826001611b169190612b28565b600c8110611b2657611b26612a43565b6020020152838260028110611b3d57611b3d612a43565b6020020151515183611b50836002612b28565b600c8110611b6057611b60612a43565b6020020152838260028110611b7757611b77612a43565b6020020151516001602002015183611b90836003612b28565b600c8110611ba057611ba0612a43565b6020020152838260028110611bb757611bb7612a43565b6020020151602001515f60028110611bd157611bd1612a43565b602002015183611be2836004612b28565b600c8110611bf257611bf2612a43565b6020020152838260028110611c0957611c09612a43565b602002015160200151600160028110611c2457611c24612a43565b602002015183611c35836005612b28565b600c8110611c4557611c45612a43565b602002015250600101611a9e565b50611c5c6122d4565b5f6020826101808560088cfa9151919c9115159b50909950505050505050505050565b5f805460ff19168215159081179091556040519081527f40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc9060200160405180910390a150565b5f5f611cd084611f74565b9050808360ff166001901b11611d4e5760405162461bcd60e51b815260206004820152603f60248201527f4269746d61705574696c732e6f72646572656442797465734172726179546f4260448201527f69746d61703a206269746d61702065786365656473206d61782076616c75650060648201526084016104ef565b90505b92915050565b5f805b8215611d5157611d6b600184612ad8565b9092169180611d7981612d70565b915050611d5a565b604080518082019091525f80825260208201526102008261ffff1610611ddc5760405162461bcd60e51b815260206004820152601060248201526f7363616c61722d746f6f2d6c6172676560801b60448201526064016104ef565b8161ffff16600103611def575081611d51565b604080518082019091525f8082526020820181905284906001905b8161ffff168661ffff1610611e5757600161ffff871660ff83161c81169003611e3a57611e37848461188e565b93505b611e44838461188e565b92506201fffe600192831b169101611e0a565b509195945050505050565b604080518082019091525f80825260208201528151158015611e8657506020820151155b15611ea3575050604080518082019091525f808252602082015290565b6040518060400160405280835f015181526020015f516020612d915f395f51905f528460200151611ed49190612a6b565b611eeb905f516020612d915f395f51905f52612ad8565b905292915050565b919050565b5f80805f516020612d915f395f51905f5260035f516020612d915f395f51905f52865f516020612d915f395f51905f52888909090890505f611f68827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f525f516020612d915f395f51905f526120f7565b91959194509092505050565b5f61010082511115611ffc5760405162461bcd60e51b8152602060048201526044602482018190527f4269746d61705574696c732e6f72646572656442797465734172726179546f42908201527f69746d61703a206f7264657265644279746573417272617920697320746f6f206064820152636c6f6e6760e01b608482015260a4016104ef565b81515f0361200b57505f919050565b5f5f835f8151811061201f5761201f612a43565b0160200151600160f89190911c81901b92505b84518110156120ee5784818151811061204d5761204d612a43565b0160200151600160f89190911c1b91508282116120e25760405162461bcd60e51b815260206004820152604760248201527f4269746d61705574696c732e6f72646572656442797465734172726179546f4260448201527f69746d61703a206f72646572656442797465734172726179206973206e6f74206064820152661bdc99195c995960ca1b608482015260a4016104ef565b91811791600101612032565b50909392505050565b5f5f6121016122d4565b6121096122f2565b602080825281810181905260408201819052606082018890526080820187905260a082018690528260c08360056107d05a03fa9250828061214657fe5b50826121945760405162461bcd60e51b815260206004820152601a60248201527f424e3235342e6578704d6f643a2063616c6c206661696c75726500000000000060448201526064016104ef565b505195945050505050565b828054828255905f5260205f2090600101600290048101928215612244579160200282015f5b8382111561220f57835183826101000a8154816001600160601b0302191690836001600160601b031602179055509260200192600c01602081600b010492830192600103026121c5565b80156122425782816101000a8154906001600160601b030219169055600c01602081600b0104928301926001030261220f565b505b50612250929150612310565b5090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180604001604052806122a3612324565b81526020016122b0612324565b905290565b604051806101800160405280600c906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060c001604052806006906020820280368337509192915050565b5b80821115612250575f8155600101612311565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b5f52604160045260245ffd5b604080519081016001600160401b038111828210171561237857612378612342565b60405290565b60405161010081016001600160401b038111828210171561237857612378612342565b604051601f8201601f191681016001600160401b03811182821017156123c9576123c9612342565b604052919050565b5f604082840312156123e1575f5ffd5b6123e9612356565b823581526020928301359281019290925250919050565b5f82601f83011261240f575f5ffd5b612417612356565b806040840185811115612428575f5ffd5b845b8181101561244257803584526020938401930161242a565b509095945050505050565b5f6080828403121561245d575f5ffd5b612465612356565b90506124718383612400565b81526124808360408401612400565b602082015292915050565b5f5f5f5f610120858703121561249f575f5ffd5b843593506124b086602087016123d1565b92506124bf866060870161244d565b91506124ce8660e087016123d1565b905092959194509250565b5f602082840312156124e9575f5ffd5b81358015158114611d4e575f5ffd5b5f5f83601f840112612508575f5ffd5b5081356001600160401b0381111561251e575f5ffd5b602083019150836020828501011115612535575f5ffd5b9250929050565b803563ffffffff81168114611ef3575f5ffd5b5f6001600160401b0382111561256757612567612342565b5060051b60200190565b5f82601f830112612580575f5ffd5b813561259361258e8261254f565b6123a1565b8082825260208201915060208360051b8601019250858311156125b4575f5ffd5b602085015b838110156125d8576125ca8161253c565b8352602092830192016125b9565b5095945050505050565b5f82601f8301126125f1575f5ffd5b81356125ff61258e8261254f565b8082825260208201915060208360061b860101925085831115612620575f5ffd5b602085015b838110156125d85761263787826123d1565b8352602090920191604001612625565b5f82601f830112612656575f5ffd5b813561266461258e8261254f565b8082825260208201915060208360051b860101925085831115612685575f5ffd5b602085015b838110156125d85780356001600160401b038111156126a7575f5ffd5b6126b6886020838a0101612571565b8452506020928301920161268a565b5f61018082840312156126d6575f5ffd5b6126de61237e565b905081356001600160401b038111156126f5575f5ffd5b61270184828501612571565b82525060208201356001600160401b0381111561271c575f5ffd5b612728848285016125e2565b60208301525060408201356001600160401b03811115612746575f5ffd5b612752848285016125e2565b604083015250612765836060840161244d565b60608201526127778360e084016123d1565b60808201526101208201356001600160401b03811115612795575f5ffd5b6127a184828501612571565b60a0830152506101408201356001600160401b038111156127c0575f5ffd5b6127cc84828501612571565b60c0830152506101608201356001600160401b038111156127eb575f5ffd5b6127f784828501612647565b60e08301525092915050565b5f5f5f5f5f60808688031215612817575f5ffd5b8535945060208601356001600160401b03811115612833575f5ffd5b61283f888289016124f8565b909550935061285290506040870161253c565b915060608601356001600160401b0381111561286c575f5ffd5b612878888289016126c5565b9150509295509295909350565b5f8151808452602084019350602083015f5b828110156128be5781516001600160601b0316865260209586019590910190600101612897565b5093949350505050565b5f8151604084526128dc6040850182612885565b9050602083015184820360208601526128f58282612885565b95945050505050565b604081525f61291060408301856128c8565b90508260208301529392505050565b5f5f5f5f5f5f60808789031215612934575f5ffd5b86356001600160401b03811115612949575f5ffd5b61295589828a016124f8565b90975095505060208701356001600160401b03811115612973575f5ffd5b61297f89828a016124f8565b909550935061299290506040880161253c565b915060608701356001600160401b038111156129ac575f5ffd5b8701610180818a0312156129be575f5ffd5b809150509295509295509295565b5f602082840312156129dc575f5ffd5b5035919050565b608081525f8551806080840152806020880160a085015e5f60a08285010152601f19601f8201168301905063ffffffff8616602084015284604084015260a0838203016060840152612a3860a08201856128c8565b979650505050505050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601260045260245ffd5b5f82612a7957612a79612a57565b500690565b5f60208284031215612a8e575f5ffd5b81516001600160a01b0381168114611d4e575f5ffd5b5f60208284031215612ab4575f5ffd5b815160ff81168114611d4e575f5ffd5b634e487b7160e01b5f52601160045260245ffd5b81810381811115611d5157611d51612ac4565b5f60208284031215612afb575f5ffd5b81516001600160c01b0381168114611d4e575f5ffd5b5f60208284031215612b21575f5ffd5b5051919050565b80820180821115611d5157611d51612ac4565b5f60208284031215612b4b575f5ffd5b815167ffffffffffffffff1981168114611d4e575f5ffd5b5f60208284031215612b73575f5ffd5b81516001600160601b0381168114611d4e575f5ffd5b6001600160601b038281168282160390811115611d5157611d51612ac4565b63ffffffff60e01b8360e01b1681525f600482018351602085015f5b82811015612be2578151845260209384019390910190600101612bc4565b50919695505050505050565b5f82612bfc57612bfc612a57565b500490565b818382375f9101908152919050565b5f611d5136836126c5565b8082028115828204841417611d5157611d51612ac4565b600181811c90821680612c4657607f821691505b602082108103612c6457634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115612cb157805f5260205f20601f840160051c81016020851015612c8f5750805b601f840160051c820191505b81811015612cae575f8155600101612c9b565b50505b505050565b81516001600160401b03811115612ccf57612ccf612342565b612ce381612cdd8454612c32565b84612c6a565b6020601f821160018114612d15575f8315612cfe5750848201515b5f19600385901b1c1916600184901b178455612cae565b5f84815260208120601f198516915b82811015612d445787850151825560209485019460019092019101612d24565b5084821015612d6157868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f61ffff821661ffff8103612d8757612d87612ac4565b6001019291505056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47424c535369676e6174757265436865636b65722e636865636b5369676e617475a26469706673582212200a031c0f40cd7a9dba41c0282418688d6e6bb6036a5315d58d2eb80f4f8ce74d64736f6c634300081b0033",
}

// ContractMinimalCertificateVerifierABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMinimalCertificateVerifierMetaData.ABI instead.
var ContractMinimalCertificateVerifierABI = ContractMinimalCertificateVerifierMetaData.ABI

// ContractMinimalCertificateVerifierBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMinimalCertificateVerifierMetaData.Bin instead.
var ContractMinimalCertificateVerifierBin = ContractMinimalCertificateVerifierMetaData.Bin

// DeployContractMinimalCertificateVerifier deploys a new Ethereum contract, binding an instance of ContractMinimalCertificateVerifier to it.
func DeployContractMinimalCertificateVerifier(auth *bind.TransactOpts, backend bind.ContractBackend, __registryCoordinator common.Address) (common.Address, *types.Transaction, *ContractMinimalCertificateVerifier, error) {
	parsed, err := ContractMinimalCertificateVerifierMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractMinimalCertificateVerifierBin), backend, __registryCoordinator)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ContractMinimalCertificateVerifier{ContractMinimalCertificateVerifierCaller: ContractMinimalCertificateVerifierCaller{contract: contract}, ContractMinimalCertificateVerifierTransactor: ContractMinimalCertificateVerifierTransactor{contract: contract}, ContractMinimalCertificateVerifierFilterer: ContractMinimalCertificateVerifierFilterer{contract: contract}}, nil
}

// ContractMinimalCertificateVerifier is an auto generated Go binding around an Ethereum contract.
type ContractMinimalCertificateVerifier struct {
	ContractMinimalCertificateVerifierCaller     // Read-only binding to the contract
	ContractMinimalCertificateVerifierTransactor // Write-only binding to the contract
	ContractMinimalCertificateVerifierFilterer   // Log filterer for contract events
}

// ContractMinimalCertificateVerifierCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractMinimalCertificateVerifierCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractMinimalCertificateVerifierTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractMinimalCertificateVerifierTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractMinimalCertificateVerifierFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractMinimalCertificateVerifierFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractMinimalCertificateVerifierSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractMinimalCertificateVerifierSession struct {
	Contract     *ContractMinimalCertificateVerifier // Generic contract binding to set the session for
	CallOpts     bind.CallOpts                       // Call options to use throughout this session
	TransactOpts bind.TransactOpts                   // Transaction auth options to use throughout this session
}

// ContractMinimalCertificateVerifierCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractMinimalCertificateVerifierCallerSession struct {
	Contract *ContractMinimalCertificateVerifierCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                             // Call options to use throughout this session
}

// ContractMinimalCertificateVerifierTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractMinimalCertificateVerifierTransactorSession struct {
	Contract     *ContractMinimalCertificateVerifierTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                             // Transaction auth options to use throughout this session
}

// ContractMinimalCertificateVerifierRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractMinimalCertificateVerifierRaw struct {
	Contract *ContractMinimalCertificateVerifier // Generic contract binding to access the raw methods on
}

// ContractMinimalCertificateVerifierCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractMinimalCertificateVerifierCallerRaw struct {
	Contract *ContractMinimalCertificateVerifierCaller // Generic read-only contract binding to access the raw methods on
}

// ContractMinimalCertificateVerifierTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractMinimalCertificateVerifierTransactorRaw struct {
	Contract *ContractMinimalCertificateVerifierTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContractMinimalCertificateVerifier creates a new instance of ContractMinimalCertificateVerifier, bound to a specific deployed contract.
func NewContractMinimalCertificateVerifier(address common.Address, backend bind.ContractBackend) (*ContractMinimalCertificateVerifier, error) {
	contract, err := bindContractMinimalCertificateVerifier(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ContractMinimalCertificateVerifier{ContractMinimalCertificateVerifierCaller: ContractMinimalCertificateVerifierCaller{contract: contract}, ContractMinimalCertificateVerifierTransactor: ContractMinimalCertificateVerifierTransactor{contract: contract}, ContractMinimalCertificateVerifierFilterer: ContractMinimalCertificateVerifierFilterer{contract: contract}}, nil
}

// NewContractMinimalCertificateVerifierCaller creates a new read-only instance of ContractMinimalCertificateVerifier, bound to a specific deployed contract.
func NewContractMinimalCertificateVerifierCaller(address common.Address, caller bind.ContractCaller) (*ContractMinimalCertificateVerifierCaller, error) {
	contract, err := bindContractMinimalCertificateVerifier(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractMinimalCertificateVerifierCaller{contract: contract}, nil
}

// NewContractMinimalCertificateVerifierTransactor creates a new write-only instance of ContractMinimalCertificateVerifier, bound to a specific deployed contract.
func NewContractMinimalCertificateVerifierTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractMinimalCertificateVerifierTransactor, error) {
	contract, err := bindContractMinimalCertificateVerifier(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractMinimalCertificateVerifierTransactor{contract: contract}, nil
}

// NewContractMinimalCertificateVerifierFilterer creates a new log filterer instance of ContractMinimalCertificateVerifier, bound to a specific deployed contract.
func NewContractMinimalCertificateVerifierFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractMinimalCertificateVerifierFilterer, error) {
	contract, err := bindContractMinimalCertificateVerifier(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractMinimalCertificateVerifierFilterer{contract: contract}, nil
}

// bindContractMinimalCertificateVerifier binds a generic wrapper to an already deployed contract.
func bindContractMinimalCertificateVerifier(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractMinimalCertificateVerifierMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractMinimalCertificateVerifier.Contract.ContractMinimalCertificateVerifierCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractMinimalCertificateVerifier.Contract.ContractMinimalCertificateVerifierTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractMinimalCertificateVerifier.Contract.ContractMinimalCertificateVerifierTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractMinimalCertificateVerifier.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractMinimalCertificateVerifier.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractMinimalCertificateVerifier.Contract.contract.Transact(opts, method, params...)
}

// DENOMINATOR is a free data retrieval call binding the contract method 0x918f8674.
//
// Solidity: function DENOMINATOR() view returns(uint256)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierCaller) DENOMINATOR(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractMinimalCertificateVerifier.contract.Call(opts, &out, "DENOMINATOR")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// DENOMINATOR is a free data retrieval call binding the contract method 0x918f8674.
//
// Solidity: function DENOMINATOR() view returns(uint256)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierSession) DENOMINATOR() (*big.Int, error) {
	return _ContractMinimalCertificateVerifier.Contract.DENOMINATOR(&_ContractMinimalCertificateVerifier.CallOpts)
}

// DENOMINATOR is a free data retrieval call binding the contract method 0x918f8674.
//
// Solidity: function DENOMINATOR() view returns(uint256)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierCallerSession) DENOMINATOR() (*big.Int, error) {
	return _ContractMinimalCertificateVerifier.Contract.DENOMINATOR(&_ContractMinimalCertificateVerifier.CallOpts)
}

// THRESHOLD is a free data retrieval call binding the contract method 0x785ffb37.
//
// Solidity: function THRESHOLD() view returns(uint256)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierCaller) THRESHOLD(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractMinimalCertificateVerifier.contract.Call(opts, &out, "THRESHOLD")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// THRESHOLD is a free data retrieval call binding the contract method 0x785ffb37.
//
// Solidity: function THRESHOLD() view returns(uint256)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierSession) THRESHOLD() (*big.Int, error) {
	return _ContractMinimalCertificateVerifier.Contract.THRESHOLD(&_ContractMinimalCertificateVerifier.CallOpts)
}

// THRESHOLD is a free data retrieval call binding the contract method 0x785ffb37.
//
// Solidity: function THRESHOLD() view returns(uint256)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierCallerSession) THRESHOLD() (*big.Int, error) {
	return _ContractMinimalCertificateVerifier.Contract.THRESHOLD(&_ContractMinimalCertificateVerifier.CallOpts)
}

// BlsApkRegistry is a free data retrieval call binding the contract method 0x5df45946.
//
// Solidity: function blsApkRegistry() view returns(address)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierCaller) BlsApkRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractMinimalCertificateVerifier.contract.Call(opts, &out, "blsApkRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// BlsApkRegistry is a free data retrieval call binding the contract method 0x5df45946.
//
// Solidity: function blsApkRegistry() view returns(address)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierSession) BlsApkRegistry() (common.Address, error) {
	return _ContractMinimalCertificateVerifier.Contract.BlsApkRegistry(&_ContractMinimalCertificateVerifier.CallOpts)
}

// BlsApkRegistry is a free data retrieval call binding the contract method 0x5df45946.
//
// Solidity: function blsApkRegistry() view returns(address)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierCallerSession) BlsApkRegistry() (common.Address, error) {
	return _ContractMinimalCertificateVerifier.Contract.BlsApkRegistry(&_ContractMinimalCertificateVerifier.CallOpts)
}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) view returns((uint96[],uint96[]), bytes32)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierCaller) CheckSignatures(opts *bind.CallOpts, msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	var out []interface{}
	err := _ContractMinimalCertificateVerifier.contract.Call(opts, &out, "checkSignatures", msgHash, quorumNumbers, referenceBlockNumber, params)

	if err != nil {
		return *new(IBLSSignatureCheckerQuorumStakeTotals), *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new(IBLSSignatureCheckerQuorumStakeTotals)).(*IBLSSignatureCheckerQuorumStakeTotals)
	out1 := *abi.ConvertType(out[1], new([32]byte)).(*[32]byte)

	return out0, out1, err

}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) view returns((uint96[],uint96[]), bytes32)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierSession) CheckSignatures(msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	return _ContractMinimalCertificateVerifier.Contract.CheckSignatures(&_ContractMinimalCertificateVerifier.CallOpts, msgHash, quorumNumbers, referenceBlockNumber, params)
}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) view returns((uint96[],uint96[]), bytes32)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierCallerSession) CheckSignatures(msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	return _ContractMinimalCertificateVerifier.Contract.CheckSignatures(&_ContractMinimalCertificateVerifier.CallOpts, msgHash, quorumNumbers, referenceBlockNumber, params)
}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierCaller) Delegation(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractMinimalCertificateVerifier.contract.Call(opts, &out, "delegation")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierSession) Delegation() (common.Address, error) {
	return _ContractMinimalCertificateVerifier.Contract.Delegation(&_ContractMinimalCertificateVerifier.CallOpts)
}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierCallerSession) Delegation() (common.Address, error) {
	return _ContractMinimalCertificateVerifier.Contract.Delegation(&_ContractMinimalCertificateVerifier.CallOpts)
}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierCaller) RegistryCoordinator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractMinimalCertificateVerifier.contract.Call(opts, &out, "registryCoordinator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierSession) RegistryCoordinator() (common.Address, error) {
	return _ContractMinimalCertificateVerifier.Contract.RegistryCoordinator(&_ContractMinimalCertificateVerifier.CallOpts)
}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierCallerSession) RegistryCoordinator() (common.Address, error) {
	return _ContractMinimalCertificateVerifier.Contract.RegistryCoordinator(&_ContractMinimalCertificateVerifier.CallOpts)
}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierCaller) StakeRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractMinimalCertificateVerifier.contract.Call(opts, &out, "stakeRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierSession) StakeRegistry() (common.Address, error) {
	return _ContractMinimalCertificateVerifier.Contract.StakeRegistry(&_ContractMinimalCertificateVerifier.CallOpts)
}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierCallerSession) StakeRegistry() (common.Address, error) {
	return _ContractMinimalCertificateVerifier.Contract.StakeRegistry(&_ContractMinimalCertificateVerifier.CallOpts)
}

// StaleStakesForbidden is a free data retrieval call binding the contract method 0xb98d0908.
//
// Solidity: function staleStakesForbidden() view returns(bool)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierCaller) StaleStakesForbidden(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _ContractMinimalCertificateVerifier.contract.Call(opts, &out, "staleStakesForbidden")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// StaleStakesForbidden is a free data retrieval call binding the contract method 0xb98d0908.
//
// Solidity: function staleStakesForbidden() view returns(bool)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierSession) StaleStakesForbidden() (bool, error) {
	return _ContractMinimalCertificateVerifier.Contract.StaleStakesForbidden(&_ContractMinimalCertificateVerifier.CallOpts)
}

// StaleStakesForbidden is a free data retrieval call binding the contract method 0xb98d0908.
//
// Solidity: function staleStakesForbidden() view returns(bool)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierCallerSession) StaleStakesForbidden() (bool, error) {
	return _ContractMinimalCertificateVerifier.Contract.StaleStakesForbidden(&_ContractMinimalCertificateVerifier.CallOpts)
}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierCaller) TrySignatureAndApkVerification(opts *bind.CallOpts, msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	var out []interface{}
	err := _ContractMinimalCertificateVerifier.contract.Call(opts, &out, "trySignatureAndApkVerification", msgHash, apk, apkG2, sigma)

	outstruct := new(struct {
		PairingSuccessful bool
		SiganatureIsValid bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.PairingSuccessful = *abi.ConvertType(out[0], new(bool)).(*bool)
	outstruct.SiganatureIsValid = *abi.ConvertType(out[1], new(bool)).(*bool)

	return *outstruct, err

}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierSession) TrySignatureAndApkVerification(msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	return _ContractMinimalCertificateVerifier.Contract.TrySignatureAndApkVerification(&_ContractMinimalCertificateVerifier.CallOpts, msgHash, apk, apkG2, sigma)
}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierCallerSession) TrySignatureAndApkVerification(msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	return _ContractMinimalCertificateVerifier.Contract.TrySignatureAndApkVerification(&_ContractMinimalCertificateVerifier.CallOpts, msgHash, apk, apkG2, sigma)
}

// VerificationRecords is a free data retrieval call binding the contract method 0x81d9d23d.
//
// Solidity: function verificationRecords(bytes32 ) view returns(bytes quorumNumbers, uint32 referenceBlockNumber, bytes32 signatoryRecordHash, (uint96[],uint96[]) quorumStakeTotals)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierCaller) VerificationRecords(opts *bind.CallOpts, arg0 [32]byte) (struct {
	QuorumNumbers        []byte
	ReferenceBlockNumber uint32
	SignatoryRecordHash  [32]byte
	QuorumStakeTotals    IBLSSignatureCheckerQuorumStakeTotals
}, error) {
	var out []interface{}
	err := _ContractMinimalCertificateVerifier.contract.Call(opts, &out, "verificationRecords", arg0)

	outstruct := new(struct {
		QuorumNumbers        []byte
		ReferenceBlockNumber uint32
		SignatoryRecordHash  [32]byte
		QuorumStakeTotals    IBLSSignatureCheckerQuorumStakeTotals
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.QuorumNumbers = *abi.ConvertType(out[0], new([]byte)).(*[]byte)
	outstruct.ReferenceBlockNumber = *abi.ConvertType(out[1], new(uint32)).(*uint32)
	outstruct.SignatoryRecordHash = *abi.ConvertType(out[2], new([32]byte)).(*[32]byte)
	outstruct.QuorumStakeTotals = *abi.ConvertType(out[3], new(IBLSSignatureCheckerQuorumStakeTotals)).(*IBLSSignatureCheckerQuorumStakeTotals)

	return *outstruct, err

}

// VerificationRecords is a free data retrieval call binding the contract method 0x81d9d23d.
//
// Solidity: function verificationRecords(bytes32 ) view returns(bytes quorumNumbers, uint32 referenceBlockNumber, bytes32 signatoryRecordHash, (uint96[],uint96[]) quorumStakeTotals)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierSession) VerificationRecords(arg0 [32]byte) (struct {
	QuorumNumbers        []byte
	ReferenceBlockNumber uint32
	SignatoryRecordHash  [32]byte
	QuorumStakeTotals    IBLSSignatureCheckerQuorumStakeTotals
}, error) {
	return _ContractMinimalCertificateVerifier.Contract.VerificationRecords(&_ContractMinimalCertificateVerifier.CallOpts, arg0)
}

// VerificationRecords is a free data retrieval call binding the contract method 0x81d9d23d.
//
// Solidity: function verificationRecords(bytes32 ) view returns(bytes quorumNumbers, uint32 referenceBlockNumber, bytes32 signatoryRecordHash, (uint96[],uint96[]) quorumStakeTotals)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierCallerSession) VerificationRecords(arg0 [32]byte) (struct {
	QuorumNumbers        []byte
	ReferenceBlockNumber uint32
	SignatoryRecordHash  [32]byte
	QuorumStakeTotals    IBLSSignatureCheckerQuorumStakeTotals
}, error) {
	return _ContractMinimalCertificateVerifier.Contract.VerificationRecords(&_ContractMinimalCertificateVerifier.CallOpts, arg0)
}

// SetStaleStakesForbidden is a paid mutator transaction binding the contract method 0x416c7e5e.
//
// Solidity: function setStaleStakesForbidden(bool value) returns()
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierTransactor) SetStaleStakesForbidden(opts *bind.TransactOpts, value bool) (*types.Transaction, error) {
	return _ContractMinimalCertificateVerifier.contract.Transact(opts, "setStaleStakesForbidden", value)
}

// SetStaleStakesForbidden is a paid mutator transaction binding the contract method 0x416c7e5e.
//
// Solidity: function setStaleStakesForbidden(bool value) returns()
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierSession) SetStaleStakesForbidden(value bool) (*types.Transaction, error) {
	return _ContractMinimalCertificateVerifier.Contract.SetStaleStakesForbidden(&_ContractMinimalCertificateVerifier.TransactOpts, value)
}

// SetStaleStakesForbidden is a paid mutator transaction binding the contract method 0x416c7e5e.
//
// Solidity: function setStaleStakesForbidden(bool value) returns()
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierTransactorSession) SetStaleStakesForbidden(value bool) (*types.Transaction, error) {
	return _ContractMinimalCertificateVerifier.Contract.SetStaleStakesForbidden(&_ContractMinimalCertificateVerifier.TransactOpts, value)
}

// VerifyCertificate is a paid mutator transaction binding the contract method 0x81d18a0d.
//
// Solidity: function verifyCertificate(bytes response, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) returns()
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierTransactor) VerifyCertificate(opts *bind.TransactOpts, response []byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractMinimalCertificateVerifier.contract.Transact(opts, "verifyCertificate", response, quorumNumbers, referenceBlockNumber, params)
}

// VerifyCertificate is a paid mutator transaction binding the contract method 0x81d18a0d.
//
// Solidity: function verifyCertificate(bytes response, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) returns()
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierSession) VerifyCertificate(response []byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractMinimalCertificateVerifier.Contract.VerifyCertificate(&_ContractMinimalCertificateVerifier.TransactOpts, response, quorumNumbers, referenceBlockNumber, params)
}

// VerifyCertificate is a paid mutator transaction binding the contract method 0x81d18a0d.
//
// Solidity: function verifyCertificate(bytes response, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) returns()
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierTransactorSession) VerifyCertificate(response []byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractMinimalCertificateVerifier.Contract.VerifyCertificate(&_ContractMinimalCertificateVerifier.TransactOpts, response, quorumNumbers, referenceBlockNumber, params)
}

// ContractMinimalCertificateVerifierStaleStakesForbiddenUpdateIterator is returned from FilterStaleStakesForbiddenUpdate and is used to iterate over the raw logs and unpacked data for StaleStakesForbiddenUpdate events raised by the ContractMinimalCertificateVerifier contract.
type ContractMinimalCertificateVerifierStaleStakesForbiddenUpdateIterator struct {
	Event *ContractMinimalCertificateVerifierStaleStakesForbiddenUpdate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractMinimalCertificateVerifierStaleStakesForbiddenUpdateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractMinimalCertificateVerifierStaleStakesForbiddenUpdate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractMinimalCertificateVerifierStaleStakesForbiddenUpdate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractMinimalCertificateVerifierStaleStakesForbiddenUpdateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractMinimalCertificateVerifierStaleStakesForbiddenUpdateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractMinimalCertificateVerifierStaleStakesForbiddenUpdate represents a StaleStakesForbiddenUpdate event raised by the ContractMinimalCertificateVerifier contract.
type ContractMinimalCertificateVerifierStaleStakesForbiddenUpdate struct {
	Value bool
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterStaleStakesForbiddenUpdate is a free log retrieval operation binding the contract event 0x40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc.
//
// Solidity: event StaleStakesForbiddenUpdate(bool value)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierFilterer) FilterStaleStakesForbiddenUpdate(opts *bind.FilterOpts) (*ContractMinimalCertificateVerifierStaleStakesForbiddenUpdateIterator, error) {

	logs, sub, err := _ContractMinimalCertificateVerifier.contract.FilterLogs(opts, "StaleStakesForbiddenUpdate")
	if err != nil {
		return nil, err
	}
	return &ContractMinimalCertificateVerifierStaleStakesForbiddenUpdateIterator{contract: _ContractMinimalCertificateVerifier.contract, event: "StaleStakesForbiddenUpdate", logs: logs, sub: sub}, nil
}

// WatchStaleStakesForbiddenUpdate is a free log subscription operation binding the contract event 0x40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc.
//
// Solidity: event StaleStakesForbiddenUpdate(bool value)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierFilterer) WatchStaleStakesForbiddenUpdate(opts *bind.WatchOpts, sink chan<- *ContractMinimalCertificateVerifierStaleStakesForbiddenUpdate) (event.Subscription, error) {

	logs, sub, err := _ContractMinimalCertificateVerifier.contract.WatchLogs(opts, "StaleStakesForbiddenUpdate")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractMinimalCertificateVerifierStaleStakesForbiddenUpdate)
				if err := _ContractMinimalCertificateVerifier.contract.UnpackLog(event, "StaleStakesForbiddenUpdate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseStaleStakesForbiddenUpdate is a log parse operation binding the contract event 0x40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc.
//
// Solidity: event StaleStakesForbiddenUpdate(bool value)
func (_ContractMinimalCertificateVerifier *ContractMinimalCertificateVerifierFilterer) ParseStaleStakesForbiddenUpdate(log types.Log) (*ContractMinimalCertificateVerifierStaleStakesForbiddenUpdate, error) {
	event := new(ContractMinimalCertificateVerifierStaleStakesForbiddenUpdate)
	if err := _ContractMinimalCertificateVerifier.contract.UnpackLog(event, "StaleStakesForbiddenUpdate", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
