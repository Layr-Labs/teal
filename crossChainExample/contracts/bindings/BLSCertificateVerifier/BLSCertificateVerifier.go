// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package BLSCertificateVerifier

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BN254G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G1Point struct {
	X *big.Int
	Y *big.Int
}

// BN254G2Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// IBLSCertificateVerifierTypesBN254Certificate is an auto generated low-level Go binding around an user-defined struct.
type IBLSCertificateVerifierTypesBN254Certificate struct {
	ReferenceTimestamp uint32
	MessageHash        [32]byte
	Signature          BN254G1Point
	Apk                BN254G2Point
	NonSignerIndices   []uint32
	NonSignerWitnesses []IBLSCertificateVerifierTypesBN254OperatorInfoWitness
}

// IBLSCertificateVerifierTypesBN254OperatorInfoWitness is an auto generated low-level Go binding around an user-defined struct.
type IBLSCertificateVerifierTypesBN254OperatorInfoWitness struct {
	OperatorIndex      uint32
	OperatorInfoProofs [][32]byte
	OperatorInfo       IBLSTableCalculatorTypesBN254OperatorInfo
}

// IBLSTableCalculatorTypesBN254OperatorInfo is an auto generated low-level Go binding around an user-defined struct.
type IBLSTableCalculatorTypesBN254OperatorInfo struct {
	Pubkey  BN254G1Point
	Weights []*big.Int
}

// IBLSTableCalculatorTypesBN254OperatorSetInfo is an auto generated low-level Go binding around an user-defined struct.
type IBLSTableCalculatorTypesBN254OperatorSetInfo struct {
	NumOperators    *big.Int
	AggregatePubkey BN254G1Point
	TotalWeights    []*big.Int
}

// OperatorSet is an auto generated low-level Go binding around an user-defined struct.
type OperatorSet struct {
	Avs common.Address
	Id  uint32
}

// BLSCertificateVerifierMetaData contains all meta data concerning the BLSCertificateVerifier contract.
var BLSCertificateVerifierMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"__operatorSet\",\"type\":\"tuple\",\"internalType\":\"structOperatorSet\",\"components\":[{\"name\":\"avs\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"id\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]},{\"name\":\"__operatorTableUpdater\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"__maxOperatorTableStaleness\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"ejectOperators\",\"inputs\":[{\"name\":\"referenceTimestamp\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"operatorIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"witnesses\",\"type\":\"tuple[]\",\"internalType\":\"structIBLSCertificateVerifierTypes.BN254OperatorInfoWitness[]\",\"components\":[{\"name\":\"operatorIndex\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"operatorInfoProofs\",\"type\":\"bytes32[]\",\"internalType\":\"bytes32[]\"},{\"name\":\"operatorInfo\",\"type\":\"tuple\",\"internalType\":\"structIBLSTableCalculatorTypes.BN254OperatorInfo\",\"components\":[{\"name\":\"pubkey\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"weights\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"}]}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"getOperatorInfo\",\"inputs\":[{\"name\":\"referenceTimestamp\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"operatorIndex\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structIBLSTableCalculatorTypes.BN254OperatorInfo\",\"components\":[{\"name\":\"pubkey\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"weights\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"}]}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getOperatorSetInfo\",\"inputs\":[{\"name\":\"referenceTimestamp\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structIBLSTableCalculatorTypes.BN254OperatorSetInfo\",\"components\":[{\"name\":\"numOperators\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"aggregatePubkey\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"totalWeights\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"}]}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"latestReferenceTimestamp\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"maxOperatorTableStaleness\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"operatorInfoTreeRoots\",\"inputs\":[{\"name\":\"\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"operatorInfos\",\"inputs\":[{\"name\":\"\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"pubkey\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"operatorSet\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structOperatorSet\",\"components\":[{\"name\":\"avs\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"id\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"operatorSetInfos\",\"inputs\":[{\"name\":\"\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"outputs\":[{\"name\":\"numOperators\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"aggregatePubkey\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"operatorTableUpdater\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setMaxOperatorTableStaleness\",\"inputs\":[{\"name\":\"_newMaxOperatorTableStaleness\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setOperatorTableUpdater\",\"inputs\":[{\"name\":\"_newOperatorTableUpdater\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateOperatorTable\",\"inputs\":[{\"name\":\"referenceTimestamp\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"operatorSetInfo\",\"type\":\"tuple\",\"internalType\":\"structIBLSTableCalculatorTypes.BN254OperatorSetInfo\",\"components\":[{\"name\":\"numOperators\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"aggregatePubkey\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"totalWeights\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"}]},{\"name\":\"operatorInfoTreeRoot\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"verifyCertificate\",\"inputs\":[{\"name\":\"cert\",\"type\":\"tuple\",\"internalType\":\"structIBLSCertificateVerifierTypes.BN254Certificate\",\"components\":[{\"name\":\"referenceTimestamp\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"messageHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"signature\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apk\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"nonSignerIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerWitnesses\",\"type\":\"tuple[]\",\"internalType\":\"structIBLSCertificateVerifierTypes.BN254OperatorInfoWitness[]\",\"components\":[{\"name\":\"operatorIndex\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"operatorInfoProofs\",\"type\":\"bytes32[]\",\"internalType\":\"bytes32[]\"},{\"name\":\"operatorInfo\",\"type\":\"tuple\",\"internalType\":\"structIBLSTableCalculatorTypes.BN254OperatorInfo\",\"components\":[{\"name\":\"pubkey\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"weights\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"}]}]}]}],\"outputs\":[{\"name\":\"signedStakes\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"verifyCertificateNominal\",\"inputs\":[{\"name\":\"cert\",\"type\":\"tuple\",\"internalType\":\"structIBLSCertificateVerifierTypes.BN254Certificate\",\"components\":[{\"name\":\"referenceTimestamp\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"messageHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"signature\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apk\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"nonSignerIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerWitnesses\",\"type\":\"tuple[]\",\"internalType\":\"structIBLSCertificateVerifierTypes.BN254OperatorInfoWitness[]\",\"components\":[{\"name\":\"operatorIndex\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"operatorInfoProofs\",\"type\":\"bytes32[]\",\"internalType\":\"bytes32[]\"},{\"name\":\"operatorInfo\",\"type\":\"tuple\",\"internalType\":\"structIBLSTableCalculatorTypes.BN254OperatorInfo\",\"components\":[{\"name\":\"pubkey\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"weights\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"}]}]}]},{\"name\":\"totalStakeNominalThresholds\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"verifyCertificateProportion\",\"inputs\":[{\"name\":\"cert\",\"type\":\"tuple\",\"internalType\":\"structIBLSCertificateVerifierTypes.BN254Certificate\",\"components\":[{\"name\":\"referenceTimestamp\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"messageHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"signature\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apk\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"nonSignerIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerWitnesses\",\"type\":\"tuple[]\",\"internalType\":\"structIBLSCertificateVerifierTypes.BN254OperatorInfoWitness[]\",\"components\":[{\"name\":\"operatorIndex\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"operatorInfoProofs\",\"type\":\"bytes32[]\",\"internalType\":\"bytes32[]\"},{\"name\":\"operatorInfo\",\"type\":\"tuple\",\"internalType\":\"structIBLSTableCalculatorTypes.BN254OperatorInfo\",\"components\":[{\"name\":\"pubkey\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"weights\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"}]}]}]},{\"name\":\"totalStakeProportionThresholds\",\"type\":\"uint16[]\",\"internalType\":\"uint16[]\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"TableUpdated\",\"inputs\":[{\"name\":\"referenceTimestamp\",\"type\":\"uint32\",\"indexed\":false,\"internalType\":\"uint32\"},{\"name\":\"pubkey\",\"type\":\"tuple\",\"indexed\":false,\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"operatorInfoTreeRoot\",\"type\":\"bytes32\",\"indexed\":false,\"internalType\":\"bytes32\"}],\"anonymous\":false},{\"type\":\"error\",\"name\":\"CertVerificationFailed\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ECAddFailed\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ECMulFailed\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ExpModFailed\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"OnlyTableUpdater\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"TableStale\",\"inputs\":[]}]",
	Bin: "0x608060405234801561000f575f5ffd5b50604051612ef0380380612ef083398101604081905261002e9161012c565b610037336100af565b82516001805460209095015163ffffffff908116600160a01b026001600160c01b03199096166001600160a01b03938416179590951790556002805492909416600160c01b027fffffffff00000000ffffffff00000000000000000000000000000000000000009092169216919091171790556101bf565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114610114575f5ffd5b919050565b805163ffffffff81168114610114575f5ffd5b5f5f5f838503608081121561013f575f5ffd5b604081121561014c575f5ffd5b50604080519081016001600160401b038111828210171561017b57634e487b7160e01b5f52604160045260245ffd5b604052610187856100fe565b815261019560208601610119565b602082015292506101a8604085016100fe565b91506101b660608501610119565b90509250925092565b612d24806101cc5f395ff3fe608060405234801561000f575f5ffd5b506004361061011c575f3560e01c8063840b2a86116100a9578063b697a30b1161006e578063b697a30b146102df578063ecf43fc1146102f4578063f0d5ecf514610307578063f2fde38b14610355578063fa2c481214610368575f5ffd5b8063840b2a86146102435780638c589642146102565780638da5cb5b14610283578063931d1d1714610293578063a6ff5936146102b3575f5ffd5b8063550ca08f116100ef578063550ca08f146101a157806368d6e081146101b4578063715018a6146101d95780637514bc3e146101e157806376274b72146101f4575f5ffd5b806305ba5838146101205780632d880cf4146101495780633ae5bbe01461016c57806353b2e56714610181575b5f5ffd5b61013361012e366004612277565b6103bc565b60405161014091906122d3565b60405180910390f35b61015c6101573660046127e2565b61048d565b6040519015158152602001610140565b61017f61017a3660046128ad565b610673565b005b61019461018f3660046128d3565b61069d565b6040516101409190612904565b61015c6101af366004612944565b6106a8565b6002546001600160a01b03165b6040516001600160a01b039091168152602001610140565b61017f61076c565b61017f6101ef366004612277565b61077f565b610235610202366004612277565b600460209081525f9182526040918290208054835180850190945260018201548452600290910154918301919091529082565b6040516101409291906129a7565b61017f610251366004612a0c565b6107ad565b610275610264366004612277565b60036020525f908152604090205481565b604051908152602001610140565b5f546001600160a01b03166101c1565b6102a66102a1366004612a8a565b610db1565b6040516101409190612ab2565b6002546102ca90600160a01b900463ffffffff1681565b60405163ffffffff9091168152602001610140565b600254600160c01b900463ffffffff166102ca565b61017f610302366004612adf565b610e83565b610348610315366004612a8a565b600560209081525f9283526040808420825291835291819020815180830190925280548252600101549181019190915281565b6040516101409190612b82565b61017f6103633660046128ad565b610fcb565b6040805180820182525f808252602091820152815180830183526001546001600160a01b03811680835263ffffffff600160a01b909204821692840192835284519081529151169181019190915201610140565b6103c4612049565b63ffffffff82165f908152600460209081526040918290208251606081018452815481528351808501855260018301548152600283015481850152818401526003820180548551818602810186018752818152929593949386019383018282801561047d57602002820191905f5260205f20905f905b82829054906101000a90046001600160601b03166001600160601b0316815260200190600c0190602082600b0104928301926001038202915080841161043a5790505b5050505050815250509050919050565b5f5f61049884611044565b845163ffffffff165f9081526004602090815260408083208151606081018352815481528251808401845260018301548152600283015481860152818501526003820180548451818702810187018652818152979850959691959294938601939192909183018282801561055a57602002820191905f5260205f20905f905b82829054906101000a90046001600160601b03166001600160601b0316815260200190600c0190602082600b010492830192600103820291508084116105175790505b50505050508152505090505f8160400151905084518351146105b55760405162461bcd60e51b815260206004820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b60448201526064015b60405180910390fd5b5f5b8351811015610664575f6127108783815181106105d6576105d6612b99565b602002602001015161ffff168484815181106105f4576105f4612b99565b60200260200101516001600160601b031661060f9190612bc1565b6106199190612bec565b9050806001600160601b031685838151811061063757610637612b99565b60200260200101516001600160601b0316101561065b575f9550505050505061066d565b506001016105b7565b50600193505050505b92915050565b61067b611779565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b606061066d82611044565b5f5f6106b384611044565b905082518151146106f85760405162461bcd60e51b815260206004820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b60448201526064016105ac565b5f5b81518110156107615783818151811061071557610715612b99565b60200260200101516001600160601b031682828151811061073857610738612b99565b60200260200101516001600160601b03161015610759575f9250505061066d565b6001016106fa565b506001949350505050565b610774611779565b61077d5f6117d2565b565b610787611779565b6002805463ffffffff909216600160c01b0263ffffffff60c01b19909216919091179055565b6002546001600160a01b031633146107d85760405163030c1b6b60e11b815260040160405180910390fd5b63ffffffff85165f90815260036020526040902054806108445760405162461bcd60e51b815260206004820152602160248201527f52656672656e63652074696d657374616d7020646f6573206e6f7420657869736044820152601d60fa1b60648201526084016105ac565b63ffffffff86165f9081526004602090815260408083208151606081018352815481528251808401845260018301548152600283015481860152818501526003820180548451818702810187018652818152929593948601938301828280156108fb57602002820191905f5260205f20905f905b82829054906101000a90046001600160601b03166001600160601b0316815260200190600c0190602082600b010492830192600103820291508084116108b85790505b50505050508152505090505f5f90505b85811015610d5b575f87878381811061092657610926612b99565b905060200201602081019061093b9190612277565b835190915063ffffffff8216106109945760405162461bcd60e51b815260206004820152601860248201527f4f70657261746f7220696e646578206e6f742076616c6964000000000000000060448201526064016105ac565b63ffffffff808a165f9081526005602090815260408083209385168352929052908120541515806109e8575063ffffffff808b165f9081526005602090815260408083209386168352929052206001015415155b905080610b9d576109f7612082565b5f805b88811015610a86578463ffffffff168a8a83818110610a1b57610a1b612b99565b9050602002810190610a2d9190612bff565b610a3b906020810190612277565b63ffffffff1603610a7e57898982818110610a5857610a58612b99565b9050602002810190610a6a9190612bff565b610a7390612c1d565b925060019150610a86565b6001016109fa565b5080610ac45760405162461bcd60e51b815260206004820152600d60248201526c626164207769746e657373657360981b60448201526064016105ac565b5f610ad98d8685604001518660200151611821565b905080610b285760405162461bcd60e51b815260206004820152601a60248201527f6d65726b6c6520766572696669636174696f6e206661696c656400000000000060448201526064016105ac565b826040015160055f8f63ffffffff1663ffffffff1681526020019081526020015f205f8763ffffffff1681526020019081526020015f205f820151815f015f820151815f01556020820151816001015550506020820151816002019080519060200190610b969291906120a5565b5050505050505b63ffffffff808b165f908152600560209081526040808320938616835292905290812060028101549091906001600160401b03811115610bdf57610bdf61231c565b604051908082528060200260200182016040528015610c08578160200160208202803683370190505b5090505f5b6002830154811015610cd857826002018181548110610c2e57610c2e612b99565b905f5260205f209060029182820401919006600c029054906101000a90046001600160601b0316828281518110610c6757610c67612b99565b60200260200101906001600160601b031690816001600160601b0316815250505f836002018281548110610c9d57610c9d612b99565b5f9182526020909120600282040180546001600160601b03938416600c6001948516026101000a908102940219169290921790915501610c0d565b505f5b866040015151811015610d4a578151811015610d4257818181518110610d0357610d03612b99565b602002602001015187604001518281518110610d2157610d21612b99565b60200260200101818151610d359190612c28565b6001600160601b03169052505b600101610cdb565b50506001909301925061090b915050565b5063ffffffff87165f908152600460209081526040918290208351815581840151805160018301558201516002820155918301518051849392610da59260038501929101906120a5565b50505050505050505050565b610db961215a565b63ffffffff83165f9081526005602090815260408083208584528252918290208251608081018452815481850190815260018301546060830152815260028201805485518186028101860190965280865291949293858101939290830182828015610e7257602002820191905f5260205f20905f905b82829054906101000a90046001600160601b03166001600160601b0316815260200190600c0190602082600b01049283019260010382029150808411610e2f5790505b505050505081525050905092915050565b6002546001600160a01b03163314610eae5760405163030c1b6b60e11b815260040160405180910390fd5b60025463ffffffff600160a01b909104811690841611610f045760405162461bcd60e51b81526020600482015260116024820152700496e76616c69642074696d657374616d7607c1b60448201526064016105ac565b63ffffffff83165f908152600460209081526040918290208451815581850151805160018301558201516002820155918401518051859392610f4d9260038501929101906120a5565b50505063ffffffff83165f818152600360209081526040918290208490556002805463ffffffff60a01b1916600160a01b909402939093179092559083015190517f349eb659faf73a073d293b6e4ee24fcfda5191a5770f5bc0a315bc45b5f69ad291610fbe918691908590612c47565b60405180910390a1505050565b610fd3611779565b6001600160a01b0381166110385760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105ac565b611041816117d2565b50565b600254815160609161106491600160c01b90910463ffffffff1690612c79565b63ffffffff1642111561108a57604051631e56bb3960e01b815260040160405180910390fd5b815163ffffffff165f90815260036020526040902054806110ed5760405162461bcd60e51b815260206004820152601860248201527f74696d657374616d7020646f6573206e6f74206578697374000000000000000060448201526064016105ac565b825163ffffffff165f9081526004602090815260408083208151606081018352815481528251808401845260018301548152600283015481860152818501526003820180548451818702810187018652818152929593948601938301828280156111a557602002820191905f5260205f20905f905b82829054906101000a90046001600160601b03166001600160601b0316815260200190600c0190602082600b010492830192600103820291508084116111625790505b50505050508152505090505f8160400151905080516001600160401b038111156111d1576111d161231c565b6040519080825280602002602001820160405280156111fa578160200160208202803683370190505b5093505f5b81518110156112545781818151811061121a5761121a612b99565b602002602001015185828151811061123457611234612b99565b6001600160601b03909216602092830291909101909101526001016111ff565b5060015b856080015151811015611305576080860151611275600183612c95565b8151811061128557611285612b99565b602002602001015163ffffffff16866080015182815181106112a9576112a9612b99565b602002602001015163ffffffff16116112fd5760405162461bcd60e51b81526020600482015260166024820152751b9bdb8b5cda59db995c9cc81b9bdd081cdbdc9d195960521b60448201526064016105ac565b600101611258565b50604080518082019091525f808252602082018190525b86608001515181101561170b575f8760800151828151811061134057611340612b99565b60200260200101519050845f01518163ffffffff16106113a25760405162461bcd60e51b815260206004820152601a60248201527f6e6f6e2d7369676e657220696e646578206e6f742076616c696400000000000060448201526064016105ac565b60405180604001604052805f81526020015f8152506040516020016113c79190612b82565b60408051601f1981840301815282825280516020918201208b5163ffffffff9081165f90815260058452848120918716815290835292909220919261141d92910181548152600190910154602082015260400190565b60405160208183030381529060405280519060200120036115b457611440612082565b5f805b8a60a00151518110156114b4578363ffffffff168b60a00151828151811061146d5761146d612b99565b60200260200101515f015163ffffffff16036114ac578a60a00151818151811061149957611499612b99565b60200260200101519250600191506114b4565b600101611443565b50806114f45760405162461bcd60e51b815260206004820152600f60248201526e62616420636572746966696361746560881b60448201526064016105ac565b5f61150c8b5f01518585604001518660200151611821565b90508061155b5760405162461bcd60e51b815260206004820152601c60248201527f6f70657261746f72206d65726b6c652070726f6f66206661696c65640000000060448201526064016105ac565b6040808401518c5163ffffffff9081165f908152600560209081528482209289168252918252929092208151805182558301516001820155828201518051929391926115ad92600285019201906120a5565b5050505050505b875163ffffffff9081165f908152600560209081526040808320938516835292815282822083516080810185528154818601908152600183015460608301528152600282018054865181860281018601909752808752949591949293858101939083018282801561167357602002820191905f5260205f20905f905b82829054906101000a90046001600160601b03166001600160601b0316815260200190600c0190602082600b010492830192600103820291508084116116305790505b505050919092525050815191925061168d91869150611878565b93505f5b8160200151518110156117005788518110156116f857816020015181815181106116bd576116bd612b99565b60200260200101518982815181106116d7576116d7612b99565b602002602001018181516116eb9190612c28565b6001600160601b03169052505b600101611691565b50505060010161131c565b505f611724611719836118f4565b602086015190611878565b90505f5f6117408960200151848b606001518c6040015161198a565b9150915081158061174f575080155b1561176d576040516316e25e1d60e01b815260040160405180910390fd5b50505050505050919050565b5f546001600160a01b0316331461077d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105ac565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f5f836040516020016118349190612ab2565b60408051601f19818403018152918152815160209283012063ffffffff89165f908152600390935291205490915061186d848284611b0c565b979650505050505050565b604080518082019091525f808252602082015261189361217b565b835181526020808501518183015283516040808401919091529084015160608301525f908360808460066107d05a03fa905080806118cd57fe5b50806118ec5760405163d4b68fd760e01b815260040160405180910390fd5b505092915050565b604080518082019091525f8082526020820152815115801561191857506020820151155b15611935575050604080518082019091525f808252602082015290565b6040518060400160405280835f015181526020015f516020612ccf5f395f51905f5284602001516119669190612ca8565b61197d905f516020612ccf5f395f51905f52612c95565b905292915050565b919050565b5f5f5f7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000187875f01518860200151885f01515f600281106119cd576119cd612b99565b60200201518951600160200201518a602001515f600281106119f1576119f1612b99565b60200201518b60200151600160028110611a0d57611a0d612b99565b602090810291909101518c518d830151604051611a6a9a99989796959401988952602089019790975260408801959095526060870193909352608086019190915260a085015260c084015260e08301526101008201526101200190565b604051602081830303815290604052805190602001205f1c611a8c9190612ca8565b9050611afe611aa5611a9e8884611b23565b8690611878565b611aad611b8b565b611af4611ae585611adf6040805180820182525f80825260209182015281518083019092526001825260029082015290565b90611b23565b611aee8c611c4b565b90611878565b8862061a80611cd5565b909890975095505050505050565b5f82611b188584611ee9565b1490505b9392505050565b604080518082019091525f8082526020820152611b3e612199565b835181526020808501519082015260408082018490525f908360608460076107d05a03fa90508080611b6c57fe5b50806118ec57604051632319df1960e11b815260040160405180910390fd5b611b936121b7565b50604080516080810182527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28183019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060830152815281518083019092527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec82527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d60208381019190915281019190915290565b604080518082019091525f80825260208201525f8080611c785f516020612ccf5f395f51905f5286612ca8565b90505b611c8481611f2b565b90935091505f516020612ccf5f395f51905f528283098303611cbc576040805180820190915290815260208101919091529392505050565b5f516020612ccf5f395f51905f52600182089050611c7b565b6040805180820182528681526020808201869052825180840190935286835282018490525f91829190611d066121d7565b5f5b6002811015611ebd575f611d1d826006612bc1565b9050848260028110611d3157611d31612b99565b60200201515183611d42835f612cbb565b600c8110611d5257611d52612b99565b6020020152848260028110611d6957611d69612b99565b60200201516020015183826001611d809190612cbb565b600c8110611d9057611d90612b99565b6020020152838260028110611da757611da7612b99565b6020020151515183611dba836002612cbb565b600c8110611dca57611dca612b99565b6020020152838260028110611de157611de1612b99565b6020020151516001602002015183611dfa836003612cbb565b600c8110611e0a57611e0a612b99565b6020020152838260028110611e2157611e21612b99565b6020020151602001515f60028110611e3b57611e3b612b99565b602002015183611e4c836004612cbb565b600c8110611e5c57611e5c612b99565b6020020152838260028110611e7357611e73612b99565b602002015160200151600160028110611e8e57611e8e612b99565b602002015183611e9f836005612cbb565b600c8110611eaf57611eaf612b99565b602002015250600101611d08565b50611ec66121f6565b5f6020826101808560088cfa9151919c9115159b50909950505050505050505050565b5f81815b8451811015611f2357611f1982868381518110611f0c57611f0c612b99565b6020026020010151611fa7565b9150600101611eed565b509392505050565b5f80805f516020612ccf5f395f51905f5260035f516020612ccf5f395f51905f52865f516020612ccf5f395f51905f52888909090890505f611f9b827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f525f516020612ccf5f395f51905f52611fd0565b91959194509092505050565b5f818310611fc1575f828152602084905260409020611b1c565b505f9182526020526040902090565b5f5f611fda6121f6565b611fe2612214565b602080825281810181905260408201819052606082018890526080820187905260a082018690528260c08360056107d05a03fa9250828061201f57fe5b508261203e5760405163d51edae360e01b815260040160405180910390fd5b505195945050505050565b60405180606001604052805f815260200161207560405180604001604052805f81526020015f81525090565b8152602001606081525090565b60408051606080820183525f825260208201529081016120a061215a565b905290565b828054828255905f5260205f209060010160029004810192821561214a579160200282015f5b8382111561211557835183826101000a8154816001600160601b0302191690836001600160601b031602179055509260200192600c01602081600b010492830192600103026120cb565b80156121485782816101000a8154906001600160601b030219169055600c01602081600b01049283019260010302612115565b505b50612156929150612232565b5090565b604080516080810182525f9181018281526060820192909252908190612075565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180604001604052806121ca612246565b81526020016120a0612246565b604051806101800160405280600c906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060c001604052806006906020820280368337509192915050565b5b80821115612156575f8155600101612233565b60405180604001604052806002906020820280368337509192915050565b803563ffffffff81168114611985575f5ffd5b5f60208284031215612287575f5ffd5b611b1c82612264565b5f8151808452602084019350602083015f5b828110156122c95781516001600160601b03168652602095860195909101906001016122a2565b5093949350505050565b60208152815160208201525f60208301516122fb604084018280518252602090810151910152565b50604083015160808084015261231460a0840182612290565b949350505050565b634e487b7160e01b5f52604160045260245ffd5b604080519081016001600160401b03811182821017156123525761235261231c565b60405290565b604051606081016001600160401b03811182821017156123525761235261231c565b60405160c081016001600160401b03811182821017156123525761235261231c565b604051601f8201601f191681016001600160401b03811182821017156123c4576123c461231c565b604052919050565b5f604082840312156123dc575f5ffd5b6123e4612330565b823581526020928301359281019290925250919050565b5f82601f83011261240a575f5ffd5b612412612330565b806040840185811115612423575f5ffd5b845b8181101561243d578035845260209384019301612425565b509095945050505050565b5f60808284031215612458575f5ffd5b612460612330565b905061246c83836123fb565b815261247b83604084016123fb565b602082015292915050565b5f6001600160401b0382111561249e5761249e61231c565b5060051b60200190565b5f82601f8301126124b7575f5ffd5b81356124ca6124c582612486565b61239c565b8082825260208201915060208360051b8601019250858311156124eb575f5ffd5b602085015b8381101561250f5761250181612264565b8352602092830192016124f0565b5095945050505050565b5f82601f830112612528575f5ffd5b81356125366124c582612486565b8082825260208201915060208360051b860101925085831115612557575f5ffd5b602085015b8381101561250f5780356001600160601b038116811461257a575f5ffd5b83526020928301920161255c565b5f60608284031215612598575f5ffd5b6125a0612330565b90506125ac83836123cc565b815260408201356001600160401b038111156125c6575f5ffd5b6125d284828501612519565b60208301525092915050565b5f606082840312156125ee575f5ffd5b6125f6612358565b905061260182612264565b815260208201356001600160401b0381111561261b575f5ffd5b8201601f8101841361262b575f5ffd5b80356126396124c582612486565b8082825260208201915060208360051b85010192508683111561265a575f5ffd5b6020840193505b8284101561267c578335825260209384019390910190612661565b602085015250505060408201356001600160401b0381111561269c575f5ffd5b6126a884828501612588565b60408301525092915050565b5f82601f8301126126c3575f5ffd5b81356126d16124c582612486565b8082825260208201915060208360051b8601019250858311156126f2575f5ffd5b602085015b8381101561250f5780356001600160401b03811115612714575f5ffd5b612723886020838a01016125de565b845250602092830192016126f7565b5f6101408284031215612743575f5ffd5b61274b61237a565b905061275682612264565b81526020828101359082015261276f83604084016123cc565b60408201526127818360808401612448565b60608201526101008201356001600160401b0381111561279f575f5ffd5b6127ab848285016124a8565b6080830152506101208201356001600160401b038111156127ca575f5ffd5b6127d6848285016126b4565b60a08301525092915050565b5f5f604083850312156127f3575f5ffd5b82356001600160401b03811115612808575f5ffd5b61281485828601612732565b92505060208301356001600160401b0381111561282f575f5ffd5b8301601f8101851361283f575f5ffd5b803561284d6124c582612486565b8082825260208201915060208360051b85010192508783111561286e575f5ffd5b6020840193505b8284101561289f57833561ffff8116811461288e575f5ffd5b825260209384019390910190612875565b809450505050509250929050565b5f602082840312156128bd575f5ffd5b81356001600160a01b0381168114611b1c575f5ffd5b5f602082840312156128e3575f5ffd5b81356001600160401b038111156128f8575f5ffd5b61231484828501612732565b602080825282518282018190525f918401906040840190835b8181101561243d5783516001600160601b031683526020938401939092019160010161291d565b5f5f60408385031215612955575f5ffd5b82356001600160401b0381111561296a575f5ffd5b61297685828601612732565b92505060208301356001600160401b03811115612991575f5ffd5b61299d85828601612519565b9150509250929050565b82815260608101611b1c602083018480518252602090810151910152565b5f5f83601f8401126129d5575f5ffd5b5081356001600160401b038111156129eb575f5ffd5b6020830191508360208260051b8501011115612a05575f5ffd5b9250929050565b5f5f5f5f5f60608688031215612a20575f5ffd5b612a2986612264565b945060208601356001600160401b03811115612a43575f5ffd5b612a4f888289016129c5565b90955093505060408601356001600160401b03811115612a6d575f5ffd5b612a79888289016129c5565b969995985093965092949392505050565b5f5f60408385031215612a9b575f5ffd5b612aa483612264565b946020939093013593505050565b60208082528251805183830152015160408201525f60208301516060808401526123146080840182612290565b5f5f5f60608486031215612af1575f5ffd5b612afa84612264565b925060208401356001600160401b03811115612b14575f5ffd5b840160808187031215612b25575f5ffd5b612b2d612358565b81358152612b3e87602084016123cc565b602082015260608201356001600160401b03811115612b5b575f5ffd5b612b6788828501612519565b60408381019190915295989197505094909301359392505050565b81518152602080830151908201526040810161066d565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b808202811582820484141761066d5761066d612bad565b634e487b7160e01b5f52601260045260245ffd5b5f82612bfa57612bfa612bd8565b500490565b5f8235605e19833603018112612c13575f5ffd5b9190910192915050565b5f61066d36836125de565b6001600160601b03828116828216039081111561066d5761066d612bad565b63ffffffff8416815260808101612c6b602083018580518252602090810151910152565b826060830152949350505050565b63ffffffff818116838216019081111561066d5761066d612bad565b8181038181111561066d5761066d612bad565b5f82612cb657612cb6612bd8565b500690565b8082018082111561066d5761066d612bad56fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47a2646970667358221220ff8211b8ddbaa5bd109d6f852aa8f3de4df6879aa8f7aa9eb0b7c25fdea6fc1a64736f6c634300081b0033",
}

// BLSCertificateVerifierABI is the input ABI used to generate the binding from.
// Deprecated: Use BLSCertificateVerifierMetaData.ABI instead.
var BLSCertificateVerifierABI = BLSCertificateVerifierMetaData.ABI

// BLSCertificateVerifierBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use BLSCertificateVerifierMetaData.Bin instead.
var BLSCertificateVerifierBin = BLSCertificateVerifierMetaData.Bin

// DeployBLSCertificateVerifier deploys a new Ethereum contract, binding an instance of BLSCertificateVerifier to it.
func DeployBLSCertificateVerifier(auth *bind.TransactOpts, backend bind.ContractBackend, __operatorSet OperatorSet, __operatorTableUpdater common.Address, __maxOperatorTableStaleness uint32) (common.Address, *types.Transaction, *BLSCertificateVerifier, error) {
	parsed, err := BLSCertificateVerifierMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(BLSCertificateVerifierBin), backend, __operatorSet, __operatorTableUpdater, __maxOperatorTableStaleness)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BLSCertificateVerifier{BLSCertificateVerifierCaller: BLSCertificateVerifierCaller{contract: contract}, BLSCertificateVerifierTransactor: BLSCertificateVerifierTransactor{contract: contract}, BLSCertificateVerifierFilterer: BLSCertificateVerifierFilterer{contract: contract}}, nil
}

// BLSCertificateVerifier is an auto generated Go binding around an Ethereum contract.
type BLSCertificateVerifier struct {
	BLSCertificateVerifierCaller     // Read-only binding to the contract
	BLSCertificateVerifierTransactor // Write-only binding to the contract
	BLSCertificateVerifierFilterer   // Log filterer for contract events
}

// BLSCertificateVerifierCaller is an auto generated read-only Go binding around an Ethereum contract.
type BLSCertificateVerifierCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BLSCertificateVerifierTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BLSCertificateVerifierTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BLSCertificateVerifierFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type BLSCertificateVerifierFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BLSCertificateVerifierSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BLSCertificateVerifierSession struct {
	Contract     *BLSCertificateVerifier // Generic contract binding to set the session for
	CallOpts     bind.CallOpts           // Call options to use throughout this session
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// BLSCertificateVerifierCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BLSCertificateVerifierCallerSession struct {
	Contract *BLSCertificateVerifierCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                 // Call options to use throughout this session
}

// BLSCertificateVerifierTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BLSCertificateVerifierTransactorSession struct {
	Contract     *BLSCertificateVerifierTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                 // Transaction auth options to use throughout this session
}

// BLSCertificateVerifierRaw is an auto generated low-level Go binding around an Ethereum contract.
type BLSCertificateVerifierRaw struct {
	Contract *BLSCertificateVerifier // Generic contract binding to access the raw methods on
}

// BLSCertificateVerifierCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BLSCertificateVerifierCallerRaw struct {
	Contract *BLSCertificateVerifierCaller // Generic read-only contract binding to access the raw methods on
}

// BLSCertificateVerifierTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BLSCertificateVerifierTransactorRaw struct {
	Contract *BLSCertificateVerifierTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBLSCertificateVerifier creates a new instance of BLSCertificateVerifier, bound to a specific deployed contract.
func NewBLSCertificateVerifier(address common.Address, backend bind.ContractBackend) (*BLSCertificateVerifier, error) {
	contract, err := bindBLSCertificateVerifier(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BLSCertificateVerifier{BLSCertificateVerifierCaller: BLSCertificateVerifierCaller{contract: contract}, BLSCertificateVerifierTransactor: BLSCertificateVerifierTransactor{contract: contract}, BLSCertificateVerifierFilterer: BLSCertificateVerifierFilterer{contract: contract}}, nil
}

// NewBLSCertificateVerifierCaller creates a new read-only instance of BLSCertificateVerifier, bound to a specific deployed contract.
func NewBLSCertificateVerifierCaller(address common.Address, caller bind.ContractCaller) (*BLSCertificateVerifierCaller, error) {
	contract, err := bindBLSCertificateVerifier(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &BLSCertificateVerifierCaller{contract: contract}, nil
}

// NewBLSCertificateVerifierTransactor creates a new write-only instance of BLSCertificateVerifier, bound to a specific deployed contract.
func NewBLSCertificateVerifierTransactor(address common.Address, transactor bind.ContractTransactor) (*BLSCertificateVerifierTransactor, error) {
	contract, err := bindBLSCertificateVerifier(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &BLSCertificateVerifierTransactor{contract: contract}, nil
}

// NewBLSCertificateVerifierFilterer creates a new log filterer instance of BLSCertificateVerifier, bound to a specific deployed contract.
func NewBLSCertificateVerifierFilterer(address common.Address, filterer bind.ContractFilterer) (*BLSCertificateVerifierFilterer, error) {
	contract, err := bindBLSCertificateVerifier(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &BLSCertificateVerifierFilterer{contract: contract}, nil
}

// bindBLSCertificateVerifier binds a generic wrapper to an already deployed contract.
func bindBLSCertificateVerifier(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := BLSCertificateVerifierMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BLSCertificateVerifier *BLSCertificateVerifierRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _BLSCertificateVerifier.Contract.BLSCertificateVerifierCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BLSCertificateVerifier *BLSCertificateVerifierRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BLSCertificateVerifier.Contract.BLSCertificateVerifierTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BLSCertificateVerifier *BLSCertificateVerifierRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BLSCertificateVerifier.Contract.BLSCertificateVerifierTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BLSCertificateVerifier *BLSCertificateVerifierCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _BLSCertificateVerifier.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BLSCertificateVerifier *BLSCertificateVerifierTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BLSCertificateVerifier.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BLSCertificateVerifier *BLSCertificateVerifierTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BLSCertificateVerifier.Contract.contract.Transact(opts, method, params...)
}

// GetOperatorInfo is a free data retrieval call binding the contract method 0x931d1d17.
//
// Solidity: function getOperatorInfo(uint32 referenceTimestamp, uint256 operatorIndex) view returns(((uint256,uint256),uint96[]))
func (_BLSCertificateVerifier *BLSCertificateVerifierCaller) GetOperatorInfo(opts *bind.CallOpts, referenceTimestamp uint32, operatorIndex *big.Int) (IBLSTableCalculatorTypesBN254OperatorInfo, error) {
	var out []interface{}
	err := _BLSCertificateVerifier.contract.Call(opts, &out, "getOperatorInfo", referenceTimestamp, operatorIndex)

	if err != nil {
		return *new(IBLSTableCalculatorTypesBN254OperatorInfo), err
	}

	out0 := *abi.ConvertType(out[0], new(IBLSTableCalculatorTypesBN254OperatorInfo)).(*IBLSTableCalculatorTypesBN254OperatorInfo)

	return out0, err

}

// GetOperatorInfo is a free data retrieval call binding the contract method 0x931d1d17.
//
// Solidity: function getOperatorInfo(uint32 referenceTimestamp, uint256 operatorIndex) view returns(((uint256,uint256),uint96[]))
func (_BLSCertificateVerifier *BLSCertificateVerifierSession) GetOperatorInfo(referenceTimestamp uint32, operatorIndex *big.Int) (IBLSTableCalculatorTypesBN254OperatorInfo, error) {
	return _BLSCertificateVerifier.Contract.GetOperatorInfo(&_BLSCertificateVerifier.CallOpts, referenceTimestamp, operatorIndex)
}

// GetOperatorInfo is a free data retrieval call binding the contract method 0x931d1d17.
//
// Solidity: function getOperatorInfo(uint32 referenceTimestamp, uint256 operatorIndex) view returns(((uint256,uint256),uint96[]))
func (_BLSCertificateVerifier *BLSCertificateVerifierCallerSession) GetOperatorInfo(referenceTimestamp uint32, operatorIndex *big.Int) (IBLSTableCalculatorTypesBN254OperatorInfo, error) {
	return _BLSCertificateVerifier.Contract.GetOperatorInfo(&_BLSCertificateVerifier.CallOpts, referenceTimestamp, operatorIndex)
}

// GetOperatorSetInfo is a free data retrieval call binding the contract method 0x05ba5838.
//
// Solidity: function getOperatorSetInfo(uint32 referenceTimestamp) view returns((uint256,(uint256,uint256),uint96[]))
func (_BLSCertificateVerifier *BLSCertificateVerifierCaller) GetOperatorSetInfo(opts *bind.CallOpts, referenceTimestamp uint32) (IBLSTableCalculatorTypesBN254OperatorSetInfo, error) {
	var out []interface{}
	err := _BLSCertificateVerifier.contract.Call(opts, &out, "getOperatorSetInfo", referenceTimestamp)

	if err != nil {
		return *new(IBLSTableCalculatorTypesBN254OperatorSetInfo), err
	}

	out0 := *abi.ConvertType(out[0], new(IBLSTableCalculatorTypesBN254OperatorSetInfo)).(*IBLSTableCalculatorTypesBN254OperatorSetInfo)

	return out0, err

}

// GetOperatorSetInfo is a free data retrieval call binding the contract method 0x05ba5838.
//
// Solidity: function getOperatorSetInfo(uint32 referenceTimestamp) view returns((uint256,(uint256,uint256),uint96[]))
func (_BLSCertificateVerifier *BLSCertificateVerifierSession) GetOperatorSetInfo(referenceTimestamp uint32) (IBLSTableCalculatorTypesBN254OperatorSetInfo, error) {
	return _BLSCertificateVerifier.Contract.GetOperatorSetInfo(&_BLSCertificateVerifier.CallOpts, referenceTimestamp)
}

// GetOperatorSetInfo is a free data retrieval call binding the contract method 0x05ba5838.
//
// Solidity: function getOperatorSetInfo(uint32 referenceTimestamp) view returns((uint256,(uint256,uint256),uint96[]))
func (_BLSCertificateVerifier *BLSCertificateVerifierCallerSession) GetOperatorSetInfo(referenceTimestamp uint32) (IBLSTableCalculatorTypesBN254OperatorSetInfo, error) {
	return _BLSCertificateVerifier.Contract.GetOperatorSetInfo(&_BLSCertificateVerifier.CallOpts, referenceTimestamp)
}

// LatestReferenceTimestamp is a free data retrieval call binding the contract method 0xa6ff5936.
//
// Solidity: function latestReferenceTimestamp() view returns(uint32)
func (_BLSCertificateVerifier *BLSCertificateVerifierCaller) LatestReferenceTimestamp(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _BLSCertificateVerifier.contract.Call(opts, &out, "latestReferenceTimestamp")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// LatestReferenceTimestamp is a free data retrieval call binding the contract method 0xa6ff5936.
//
// Solidity: function latestReferenceTimestamp() view returns(uint32)
func (_BLSCertificateVerifier *BLSCertificateVerifierSession) LatestReferenceTimestamp() (uint32, error) {
	return _BLSCertificateVerifier.Contract.LatestReferenceTimestamp(&_BLSCertificateVerifier.CallOpts)
}

// LatestReferenceTimestamp is a free data retrieval call binding the contract method 0xa6ff5936.
//
// Solidity: function latestReferenceTimestamp() view returns(uint32)
func (_BLSCertificateVerifier *BLSCertificateVerifierCallerSession) LatestReferenceTimestamp() (uint32, error) {
	return _BLSCertificateVerifier.Contract.LatestReferenceTimestamp(&_BLSCertificateVerifier.CallOpts)
}

// MaxOperatorTableStaleness is a free data retrieval call binding the contract method 0xb697a30b.
//
// Solidity: function maxOperatorTableStaleness() view returns(uint32)
func (_BLSCertificateVerifier *BLSCertificateVerifierCaller) MaxOperatorTableStaleness(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _BLSCertificateVerifier.contract.Call(opts, &out, "maxOperatorTableStaleness")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// MaxOperatorTableStaleness is a free data retrieval call binding the contract method 0xb697a30b.
//
// Solidity: function maxOperatorTableStaleness() view returns(uint32)
func (_BLSCertificateVerifier *BLSCertificateVerifierSession) MaxOperatorTableStaleness() (uint32, error) {
	return _BLSCertificateVerifier.Contract.MaxOperatorTableStaleness(&_BLSCertificateVerifier.CallOpts)
}

// MaxOperatorTableStaleness is a free data retrieval call binding the contract method 0xb697a30b.
//
// Solidity: function maxOperatorTableStaleness() view returns(uint32)
func (_BLSCertificateVerifier *BLSCertificateVerifierCallerSession) MaxOperatorTableStaleness() (uint32, error) {
	return _BLSCertificateVerifier.Contract.MaxOperatorTableStaleness(&_BLSCertificateVerifier.CallOpts)
}

// OperatorInfoTreeRoots is a free data retrieval call binding the contract method 0x8c589642.
//
// Solidity: function operatorInfoTreeRoots(uint32 ) view returns(bytes32)
func (_BLSCertificateVerifier *BLSCertificateVerifierCaller) OperatorInfoTreeRoots(opts *bind.CallOpts, arg0 uint32) ([32]byte, error) {
	var out []interface{}
	err := _BLSCertificateVerifier.contract.Call(opts, &out, "operatorInfoTreeRoots", arg0)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// OperatorInfoTreeRoots is a free data retrieval call binding the contract method 0x8c589642.
//
// Solidity: function operatorInfoTreeRoots(uint32 ) view returns(bytes32)
func (_BLSCertificateVerifier *BLSCertificateVerifierSession) OperatorInfoTreeRoots(arg0 uint32) ([32]byte, error) {
	return _BLSCertificateVerifier.Contract.OperatorInfoTreeRoots(&_BLSCertificateVerifier.CallOpts, arg0)
}

// OperatorInfoTreeRoots is a free data retrieval call binding the contract method 0x8c589642.
//
// Solidity: function operatorInfoTreeRoots(uint32 ) view returns(bytes32)
func (_BLSCertificateVerifier *BLSCertificateVerifierCallerSession) OperatorInfoTreeRoots(arg0 uint32) ([32]byte, error) {
	return _BLSCertificateVerifier.Contract.OperatorInfoTreeRoots(&_BLSCertificateVerifier.CallOpts, arg0)
}

// OperatorInfos is a free data retrieval call binding the contract method 0xf0d5ecf5.
//
// Solidity: function operatorInfos(uint32 , uint256 ) view returns((uint256,uint256) pubkey)
func (_BLSCertificateVerifier *BLSCertificateVerifierCaller) OperatorInfos(opts *bind.CallOpts, arg0 uint32, arg1 *big.Int) (BN254G1Point, error) {
	var out []interface{}
	err := _BLSCertificateVerifier.contract.Call(opts, &out, "operatorInfos", arg0, arg1)

	if err != nil {
		return *new(BN254G1Point), err
	}

	out0 := *abi.ConvertType(out[0], new(BN254G1Point)).(*BN254G1Point)

	return out0, err

}

// OperatorInfos is a free data retrieval call binding the contract method 0xf0d5ecf5.
//
// Solidity: function operatorInfos(uint32 , uint256 ) view returns((uint256,uint256) pubkey)
func (_BLSCertificateVerifier *BLSCertificateVerifierSession) OperatorInfos(arg0 uint32, arg1 *big.Int) (BN254G1Point, error) {
	return _BLSCertificateVerifier.Contract.OperatorInfos(&_BLSCertificateVerifier.CallOpts, arg0, arg1)
}

// OperatorInfos is a free data retrieval call binding the contract method 0xf0d5ecf5.
//
// Solidity: function operatorInfos(uint32 , uint256 ) view returns((uint256,uint256) pubkey)
func (_BLSCertificateVerifier *BLSCertificateVerifierCallerSession) OperatorInfos(arg0 uint32, arg1 *big.Int) (BN254G1Point, error) {
	return _BLSCertificateVerifier.Contract.OperatorInfos(&_BLSCertificateVerifier.CallOpts, arg0, arg1)
}

// OperatorSet is a free data retrieval call binding the contract method 0xfa2c4812.
//
// Solidity: function operatorSet() view returns((address,uint32))
func (_BLSCertificateVerifier *BLSCertificateVerifierCaller) OperatorSet(opts *bind.CallOpts) (OperatorSet, error) {
	var out []interface{}
	err := _BLSCertificateVerifier.contract.Call(opts, &out, "operatorSet")

	if err != nil {
		return *new(OperatorSet), err
	}

	out0 := *abi.ConvertType(out[0], new(OperatorSet)).(*OperatorSet)

	return out0, err

}

// OperatorSet is a free data retrieval call binding the contract method 0xfa2c4812.
//
// Solidity: function operatorSet() view returns((address,uint32))
func (_BLSCertificateVerifier *BLSCertificateVerifierSession) OperatorSet() (OperatorSet, error) {
	return _BLSCertificateVerifier.Contract.OperatorSet(&_BLSCertificateVerifier.CallOpts)
}

// OperatorSet is a free data retrieval call binding the contract method 0xfa2c4812.
//
// Solidity: function operatorSet() view returns((address,uint32))
func (_BLSCertificateVerifier *BLSCertificateVerifierCallerSession) OperatorSet() (OperatorSet, error) {
	return _BLSCertificateVerifier.Contract.OperatorSet(&_BLSCertificateVerifier.CallOpts)
}

// OperatorSetInfos is a free data retrieval call binding the contract method 0x76274b72.
//
// Solidity: function operatorSetInfos(uint32 ) view returns(uint256 numOperators, (uint256,uint256) aggregatePubkey)
func (_BLSCertificateVerifier *BLSCertificateVerifierCaller) OperatorSetInfos(opts *bind.CallOpts, arg0 uint32) (struct {
	NumOperators    *big.Int
	AggregatePubkey BN254G1Point
}, error) {
	var out []interface{}
	err := _BLSCertificateVerifier.contract.Call(opts, &out, "operatorSetInfos", arg0)

	outstruct := new(struct {
		NumOperators    *big.Int
		AggregatePubkey BN254G1Point
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.NumOperators = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.AggregatePubkey = *abi.ConvertType(out[1], new(BN254G1Point)).(*BN254G1Point)

	return *outstruct, err

}

// OperatorSetInfos is a free data retrieval call binding the contract method 0x76274b72.
//
// Solidity: function operatorSetInfos(uint32 ) view returns(uint256 numOperators, (uint256,uint256) aggregatePubkey)
func (_BLSCertificateVerifier *BLSCertificateVerifierSession) OperatorSetInfos(arg0 uint32) (struct {
	NumOperators    *big.Int
	AggregatePubkey BN254G1Point
}, error) {
	return _BLSCertificateVerifier.Contract.OperatorSetInfos(&_BLSCertificateVerifier.CallOpts, arg0)
}

// OperatorSetInfos is a free data retrieval call binding the contract method 0x76274b72.
//
// Solidity: function operatorSetInfos(uint32 ) view returns(uint256 numOperators, (uint256,uint256) aggregatePubkey)
func (_BLSCertificateVerifier *BLSCertificateVerifierCallerSession) OperatorSetInfos(arg0 uint32) (struct {
	NumOperators    *big.Int
	AggregatePubkey BN254G1Point
}, error) {
	return _BLSCertificateVerifier.Contract.OperatorSetInfos(&_BLSCertificateVerifier.CallOpts, arg0)
}

// OperatorTableUpdater is a free data retrieval call binding the contract method 0x68d6e081.
//
// Solidity: function operatorTableUpdater() view returns(address)
func (_BLSCertificateVerifier *BLSCertificateVerifierCaller) OperatorTableUpdater(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _BLSCertificateVerifier.contract.Call(opts, &out, "operatorTableUpdater")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// OperatorTableUpdater is a free data retrieval call binding the contract method 0x68d6e081.
//
// Solidity: function operatorTableUpdater() view returns(address)
func (_BLSCertificateVerifier *BLSCertificateVerifierSession) OperatorTableUpdater() (common.Address, error) {
	return _BLSCertificateVerifier.Contract.OperatorTableUpdater(&_BLSCertificateVerifier.CallOpts)
}

// OperatorTableUpdater is a free data retrieval call binding the contract method 0x68d6e081.
//
// Solidity: function operatorTableUpdater() view returns(address)
func (_BLSCertificateVerifier *BLSCertificateVerifierCallerSession) OperatorTableUpdater() (common.Address, error) {
	return _BLSCertificateVerifier.Contract.OperatorTableUpdater(&_BLSCertificateVerifier.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_BLSCertificateVerifier *BLSCertificateVerifierCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _BLSCertificateVerifier.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_BLSCertificateVerifier *BLSCertificateVerifierSession) Owner() (common.Address, error) {
	return _BLSCertificateVerifier.Contract.Owner(&_BLSCertificateVerifier.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_BLSCertificateVerifier *BLSCertificateVerifierCallerSession) Owner() (common.Address, error) {
	return _BLSCertificateVerifier.Contract.Owner(&_BLSCertificateVerifier.CallOpts)
}

// EjectOperators is a paid mutator transaction binding the contract method 0x840b2a86.
//
// Solidity: function ejectOperators(uint32 referenceTimestamp, uint32[] operatorIndices, (uint32,bytes32[],((uint256,uint256),uint96[]))[] witnesses) returns()
func (_BLSCertificateVerifier *BLSCertificateVerifierTransactor) EjectOperators(opts *bind.TransactOpts, referenceTimestamp uint32, operatorIndices []uint32, witnesses []IBLSCertificateVerifierTypesBN254OperatorInfoWitness) (*types.Transaction, error) {
	return _BLSCertificateVerifier.contract.Transact(opts, "ejectOperators", referenceTimestamp, operatorIndices, witnesses)
}

// EjectOperators is a paid mutator transaction binding the contract method 0x840b2a86.
//
// Solidity: function ejectOperators(uint32 referenceTimestamp, uint32[] operatorIndices, (uint32,bytes32[],((uint256,uint256),uint96[]))[] witnesses) returns()
func (_BLSCertificateVerifier *BLSCertificateVerifierSession) EjectOperators(referenceTimestamp uint32, operatorIndices []uint32, witnesses []IBLSCertificateVerifierTypesBN254OperatorInfoWitness) (*types.Transaction, error) {
	return _BLSCertificateVerifier.Contract.EjectOperators(&_BLSCertificateVerifier.TransactOpts, referenceTimestamp, operatorIndices, witnesses)
}

// EjectOperators is a paid mutator transaction binding the contract method 0x840b2a86.
//
// Solidity: function ejectOperators(uint32 referenceTimestamp, uint32[] operatorIndices, (uint32,bytes32[],((uint256,uint256),uint96[]))[] witnesses) returns()
func (_BLSCertificateVerifier *BLSCertificateVerifierTransactorSession) EjectOperators(referenceTimestamp uint32, operatorIndices []uint32, witnesses []IBLSCertificateVerifierTypesBN254OperatorInfoWitness) (*types.Transaction, error) {
	return _BLSCertificateVerifier.Contract.EjectOperators(&_BLSCertificateVerifier.TransactOpts, referenceTimestamp, operatorIndices, witnesses)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_BLSCertificateVerifier *BLSCertificateVerifierTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BLSCertificateVerifier.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_BLSCertificateVerifier *BLSCertificateVerifierSession) RenounceOwnership() (*types.Transaction, error) {
	return _BLSCertificateVerifier.Contract.RenounceOwnership(&_BLSCertificateVerifier.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_BLSCertificateVerifier *BLSCertificateVerifierTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _BLSCertificateVerifier.Contract.RenounceOwnership(&_BLSCertificateVerifier.TransactOpts)
}

// SetMaxOperatorTableStaleness is a paid mutator transaction binding the contract method 0x7514bc3e.
//
// Solidity: function setMaxOperatorTableStaleness(uint32 _newMaxOperatorTableStaleness) returns()
func (_BLSCertificateVerifier *BLSCertificateVerifierTransactor) SetMaxOperatorTableStaleness(opts *bind.TransactOpts, _newMaxOperatorTableStaleness uint32) (*types.Transaction, error) {
	return _BLSCertificateVerifier.contract.Transact(opts, "setMaxOperatorTableStaleness", _newMaxOperatorTableStaleness)
}

// SetMaxOperatorTableStaleness is a paid mutator transaction binding the contract method 0x7514bc3e.
//
// Solidity: function setMaxOperatorTableStaleness(uint32 _newMaxOperatorTableStaleness) returns()
func (_BLSCertificateVerifier *BLSCertificateVerifierSession) SetMaxOperatorTableStaleness(_newMaxOperatorTableStaleness uint32) (*types.Transaction, error) {
	return _BLSCertificateVerifier.Contract.SetMaxOperatorTableStaleness(&_BLSCertificateVerifier.TransactOpts, _newMaxOperatorTableStaleness)
}

// SetMaxOperatorTableStaleness is a paid mutator transaction binding the contract method 0x7514bc3e.
//
// Solidity: function setMaxOperatorTableStaleness(uint32 _newMaxOperatorTableStaleness) returns()
func (_BLSCertificateVerifier *BLSCertificateVerifierTransactorSession) SetMaxOperatorTableStaleness(_newMaxOperatorTableStaleness uint32) (*types.Transaction, error) {
	return _BLSCertificateVerifier.Contract.SetMaxOperatorTableStaleness(&_BLSCertificateVerifier.TransactOpts, _newMaxOperatorTableStaleness)
}

// SetOperatorTableUpdater is a paid mutator transaction binding the contract method 0x3ae5bbe0.
//
// Solidity: function setOperatorTableUpdater(address _newOperatorTableUpdater) returns()
func (_BLSCertificateVerifier *BLSCertificateVerifierTransactor) SetOperatorTableUpdater(opts *bind.TransactOpts, _newOperatorTableUpdater common.Address) (*types.Transaction, error) {
	return _BLSCertificateVerifier.contract.Transact(opts, "setOperatorTableUpdater", _newOperatorTableUpdater)
}

// SetOperatorTableUpdater is a paid mutator transaction binding the contract method 0x3ae5bbe0.
//
// Solidity: function setOperatorTableUpdater(address _newOperatorTableUpdater) returns()
func (_BLSCertificateVerifier *BLSCertificateVerifierSession) SetOperatorTableUpdater(_newOperatorTableUpdater common.Address) (*types.Transaction, error) {
	return _BLSCertificateVerifier.Contract.SetOperatorTableUpdater(&_BLSCertificateVerifier.TransactOpts, _newOperatorTableUpdater)
}

// SetOperatorTableUpdater is a paid mutator transaction binding the contract method 0x3ae5bbe0.
//
// Solidity: function setOperatorTableUpdater(address _newOperatorTableUpdater) returns()
func (_BLSCertificateVerifier *BLSCertificateVerifierTransactorSession) SetOperatorTableUpdater(_newOperatorTableUpdater common.Address) (*types.Transaction, error) {
	return _BLSCertificateVerifier.Contract.SetOperatorTableUpdater(&_BLSCertificateVerifier.TransactOpts, _newOperatorTableUpdater)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BLSCertificateVerifier *BLSCertificateVerifierTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _BLSCertificateVerifier.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BLSCertificateVerifier *BLSCertificateVerifierSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BLSCertificateVerifier.Contract.TransferOwnership(&_BLSCertificateVerifier.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BLSCertificateVerifier *BLSCertificateVerifierTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BLSCertificateVerifier.Contract.TransferOwnership(&_BLSCertificateVerifier.TransactOpts, newOwner)
}

// UpdateOperatorTable is a paid mutator transaction binding the contract method 0xecf43fc1.
//
// Solidity: function updateOperatorTable(uint32 referenceTimestamp, (uint256,(uint256,uint256),uint96[]) operatorSetInfo, bytes32 operatorInfoTreeRoot) returns()
func (_BLSCertificateVerifier *BLSCertificateVerifierTransactor) UpdateOperatorTable(opts *bind.TransactOpts, referenceTimestamp uint32, operatorSetInfo IBLSTableCalculatorTypesBN254OperatorSetInfo, operatorInfoTreeRoot [32]byte) (*types.Transaction, error) {
	return _BLSCertificateVerifier.contract.Transact(opts, "updateOperatorTable", referenceTimestamp, operatorSetInfo, operatorInfoTreeRoot)
}

// UpdateOperatorTable is a paid mutator transaction binding the contract method 0xecf43fc1.
//
// Solidity: function updateOperatorTable(uint32 referenceTimestamp, (uint256,(uint256,uint256),uint96[]) operatorSetInfo, bytes32 operatorInfoTreeRoot) returns()
func (_BLSCertificateVerifier *BLSCertificateVerifierSession) UpdateOperatorTable(referenceTimestamp uint32, operatorSetInfo IBLSTableCalculatorTypesBN254OperatorSetInfo, operatorInfoTreeRoot [32]byte) (*types.Transaction, error) {
	return _BLSCertificateVerifier.Contract.UpdateOperatorTable(&_BLSCertificateVerifier.TransactOpts, referenceTimestamp, operatorSetInfo, operatorInfoTreeRoot)
}

// UpdateOperatorTable is a paid mutator transaction binding the contract method 0xecf43fc1.
//
// Solidity: function updateOperatorTable(uint32 referenceTimestamp, (uint256,(uint256,uint256),uint96[]) operatorSetInfo, bytes32 operatorInfoTreeRoot) returns()
func (_BLSCertificateVerifier *BLSCertificateVerifierTransactorSession) UpdateOperatorTable(referenceTimestamp uint32, operatorSetInfo IBLSTableCalculatorTypesBN254OperatorSetInfo, operatorInfoTreeRoot [32]byte) (*types.Transaction, error) {
	return _BLSCertificateVerifier.Contract.UpdateOperatorTable(&_BLSCertificateVerifier.TransactOpts, referenceTimestamp, operatorSetInfo, operatorInfoTreeRoot)
}

// VerifyCertificate is a paid mutator transaction binding the contract method 0x53b2e567.
//
// Solidity: function verifyCertificate((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),uint32[],(uint32,bytes32[],((uint256,uint256),uint96[]))[]) cert) returns(uint96[] signedStakes)
func (_BLSCertificateVerifier *BLSCertificateVerifierTransactor) VerifyCertificate(opts *bind.TransactOpts, cert IBLSCertificateVerifierTypesBN254Certificate) (*types.Transaction, error) {
	return _BLSCertificateVerifier.contract.Transact(opts, "verifyCertificate", cert)
}

// VerifyCertificate is a paid mutator transaction binding the contract method 0x53b2e567.
//
// Solidity: function verifyCertificate((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),uint32[],(uint32,bytes32[],((uint256,uint256),uint96[]))[]) cert) returns(uint96[] signedStakes)
func (_BLSCertificateVerifier *BLSCertificateVerifierSession) VerifyCertificate(cert IBLSCertificateVerifierTypesBN254Certificate) (*types.Transaction, error) {
	return _BLSCertificateVerifier.Contract.VerifyCertificate(&_BLSCertificateVerifier.TransactOpts, cert)
}

// VerifyCertificate is a paid mutator transaction binding the contract method 0x53b2e567.
//
// Solidity: function verifyCertificate((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),uint32[],(uint32,bytes32[],((uint256,uint256),uint96[]))[]) cert) returns(uint96[] signedStakes)
func (_BLSCertificateVerifier *BLSCertificateVerifierTransactorSession) VerifyCertificate(cert IBLSCertificateVerifierTypesBN254Certificate) (*types.Transaction, error) {
	return _BLSCertificateVerifier.Contract.VerifyCertificate(&_BLSCertificateVerifier.TransactOpts, cert)
}

// VerifyCertificateNominal is a paid mutator transaction binding the contract method 0x550ca08f.
//
// Solidity: function verifyCertificateNominal((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),uint32[],(uint32,bytes32[],((uint256,uint256),uint96[]))[]) cert, uint96[] totalStakeNominalThresholds) returns(bool)
func (_BLSCertificateVerifier *BLSCertificateVerifierTransactor) VerifyCertificateNominal(opts *bind.TransactOpts, cert IBLSCertificateVerifierTypesBN254Certificate, totalStakeNominalThresholds []*big.Int) (*types.Transaction, error) {
	return _BLSCertificateVerifier.contract.Transact(opts, "verifyCertificateNominal", cert, totalStakeNominalThresholds)
}

// VerifyCertificateNominal is a paid mutator transaction binding the contract method 0x550ca08f.
//
// Solidity: function verifyCertificateNominal((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),uint32[],(uint32,bytes32[],((uint256,uint256),uint96[]))[]) cert, uint96[] totalStakeNominalThresholds) returns(bool)
func (_BLSCertificateVerifier *BLSCertificateVerifierSession) VerifyCertificateNominal(cert IBLSCertificateVerifierTypesBN254Certificate, totalStakeNominalThresholds []*big.Int) (*types.Transaction, error) {
	return _BLSCertificateVerifier.Contract.VerifyCertificateNominal(&_BLSCertificateVerifier.TransactOpts, cert, totalStakeNominalThresholds)
}

// VerifyCertificateNominal is a paid mutator transaction binding the contract method 0x550ca08f.
//
// Solidity: function verifyCertificateNominal((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),uint32[],(uint32,bytes32[],((uint256,uint256),uint96[]))[]) cert, uint96[] totalStakeNominalThresholds) returns(bool)
func (_BLSCertificateVerifier *BLSCertificateVerifierTransactorSession) VerifyCertificateNominal(cert IBLSCertificateVerifierTypesBN254Certificate, totalStakeNominalThresholds []*big.Int) (*types.Transaction, error) {
	return _BLSCertificateVerifier.Contract.VerifyCertificateNominal(&_BLSCertificateVerifier.TransactOpts, cert, totalStakeNominalThresholds)
}

// VerifyCertificateProportion is a paid mutator transaction binding the contract method 0x2d880cf4.
//
// Solidity: function verifyCertificateProportion((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),uint32[],(uint32,bytes32[],((uint256,uint256),uint96[]))[]) cert, uint16[] totalStakeProportionThresholds) returns(bool)
func (_BLSCertificateVerifier *BLSCertificateVerifierTransactor) VerifyCertificateProportion(opts *bind.TransactOpts, cert IBLSCertificateVerifierTypesBN254Certificate, totalStakeProportionThresholds []uint16) (*types.Transaction, error) {
	return _BLSCertificateVerifier.contract.Transact(opts, "verifyCertificateProportion", cert, totalStakeProportionThresholds)
}

// VerifyCertificateProportion is a paid mutator transaction binding the contract method 0x2d880cf4.
//
// Solidity: function verifyCertificateProportion((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),uint32[],(uint32,bytes32[],((uint256,uint256),uint96[]))[]) cert, uint16[] totalStakeProportionThresholds) returns(bool)
func (_BLSCertificateVerifier *BLSCertificateVerifierSession) VerifyCertificateProportion(cert IBLSCertificateVerifierTypesBN254Certificate, totalStakeProportionThresholds []uint16) (*types.Transaction, error) {
	return _BLSCertificateVerifier.Contract.VerifyCertificateProportion(&_BLSCertificateVerifier.TransactOpts, cert, totalStakeProportionThresholds)
}

// VerifyCertificateProportion is a paid mutator transaction binding the contract method 0x2d880cf4.
//
// Solidity: function verifyCertificateProportion((uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),uint32[],(uint32,bytes32[],((uint256,uint256),uint96[]))[]) cert, uint16[] totalStakeProportionThresholds) returns(bool)
func (_BLSCertificateVerifier *BLSCertificateVerifierTransactorSession) VerifyCertificateProportion(cert IBLSCertificateVerifierTypesBN254Certificate, totalStakeProportionThresholds []uint16) (*types.Transaction, error) {
	return _BLSCertificateVerifier.Contract.VerifyCertificateProportion(&_BLSCertificateVerifier.TransactOpts, cert, totalStakeProportionThresholds)
}

// BLSCertificateVerifierOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the BLSCertificateVerifier contract.
type BLSCertificateVerifierOwnershipTransferredIterator struct {
	Event *BLSCertificateVerifierOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BLSCertificateVerifierOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BLSCertificateVerifierOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BLSCertificateVerifierOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BLSCertificateVerifierOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BLSCertificateVerifierOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BLSCertificateVerifierOwnershipTransferred represents a OwnershipTransferred event raised by the BLSCertificateVerifier contract.
type BLSCertificateVerifierOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_BLSCertificateVerifier *BLSCertificateVerifierFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*BLSCertificateVerifierOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _BLSCertificateVerifier.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &BLSCertificateVerifierOwnershipTransferredIterator{contract: _BLSCertificateVerifier.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_BLSCertificateVerifier *BLSCertificateVerifierFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *BLSCertificateVerifierOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _BLSCertificateVerifier.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BLSCertificateVerifierOwnershipTransferred)
				if err := _BLSCertificateVerifier.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_BLSCertificateVerifier *BLSCertificateVerifierFilterer) ParseOwnershipTransferred(log types.Log) (*BLSCertificateVerifierOwnershipTransferred, error) {
	event := new(BLSCertificateVerifierOwnershipTransferred)
	if err := _BLSCertificateVerifier.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BLSCertificateVerifierTableUpdatedIterator is returned from FilterTableUpdated and is used to iterate over the raw logs and unpacked data for TableUpdated events raised by the BLSCertificateVerifier contract.
type BLSCertificateVerifierTableUpdatedIterator struct {
	Event *BLSCertificateVerifierTableUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BLSCertificateVerifierTableUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BLSCertificateVerifierTableUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BLSCertificateVerifierTableUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BLSCertificateVerifierTableUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BLSCertificateVerifierTableUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BLSCertificateVerifierTableUpdated represents a TableUpdated event raised by the BLSCertificateVerifier contract.
type BLSCertificateVerifierTableUpdated struct {
	ReferenceTimestamp   uint32
	Pubkey               BN254G1Point
	OperatorInfoTreeRoot [32]byte
	Raw                  types.Log // Blockchain specific contextual infos
}

// FilterTableUpdated is a free log retrieval operation binding the contract event 0x349eb659faf73a073d293b6e4ee24fcfda5191a5770f5bc0a315bc45b5f69ad2.
//
// Solidity: event TableUpdated(uint32 referenceTimestamp, (uint256,uint256) pubkey, bytes32 operatorInfoTreeRoot)
func (_BLSCertificateVerifier *BLSCertificateVerifierFilterer) FilterTableUpdated(opts *bind.FilterOpts) (*BLSCertificateVerifierTableUpdatedIterator, error) {

	logs, sub, err := _BLSCertificateVerifier.contract.FilterLogs(opts, "TableUpdated")
	if err != nil {
		return nil, err
	}
	return &BLSCertificateVerifierTableUpdatedIterator{contract: _BLSCertificateVerifier.contract, event: "TableUpdated", logs: logs, sub: sub}, nil
}

// WatchTableUpdated is a free log subscription operation binding the contract event 0x349eb659faf73a073d293b6e4ee24fcfda5191a5770f5bc0a315bc45b5f69ad2.
//
// Solidity: event TableUpdated(uint32 referenceTimestamp, (uint256,uint256) pubkey, bytes32 operatorInfoTreeRoot)
func (_BLSCertificateVerifier *BLSCertificateVerifierFilterer) WatchTableUpdated(opts *bind.WatchOpts, sink chan<- *BLSCertificateVerifierTableUpdated) (event.Subscription, error) {

	logs, sub, err := _BLSCertificateVerifier.contract.WatchLogs(opts, "TableUpdated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BLSCertificateVerifierTableUpdated)
				if err := _BLSCertificateVerifier.contract.UnpackLog(event, "TableUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTableUpdated is a log parse operation binding the contract event 0x349eb659faf73a073d293b6e4ee24fcfda5191a5770f5bc0a315bc45b5f69ad2.
//
// Solidity: event TableUpdated(uint32 referenceTimestamp, (uint256,uint256) pubkey, bytes32 operatorInfoTreeRoot)
func (_BLSCertificateVerifier *BLSCertificateVerifierFilterer) ParseTableUpdated(log types.Log) (*BLSCertificateVerifierTableUpdated, error) {
	event := new(BLSCertificateVerifierTableUpdated)
	if err := _BLSCertificateVerifier.contract.UnpackLog(event, "TableUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
